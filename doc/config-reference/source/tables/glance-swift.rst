..
    Warning: Do not edit this file. It is automatically generated from the
    software project's code and your changes will be overwritten.

    The tool to generate this file lives in openstack-doc-tools repository.

    Please make any changes needed in the code, then run the
    autogenerate-config-doc tool from the openstack-doc-tools repository, or
    ask for help on the documentation mailing list, IRC channel or meeting.

.. _glance-swift:

.. list-table:: Description of swift configuration options
   :header-rows: 1
   :class: config-ref-table

   * - Configuration option = Default value
     - Description
   * - **[DEFAULT]**
     -
   * - ``default_swift_reference`` = ``ref1``
     - (String) Reference to default Swift account/backing store parameters.

       Provide a string value representing a reference to the default set of parameters required for using swift account/backing store for image storage. The default reference value for this configuration option is 'ref1'. This configuration option dereferences the parameters and facilitates image storage in Swift storage backend every time a new image is added.

       Possible values:

       * A valid string value

       Related options:

       * None
   * - ``swift_store_auth_address`` = ``None``
     - (String) The address where the Swift authentication service is listening.
   * - ``swift_store_config_file`` = ``None``
     - (String) File containing the swift account(s) configurations.

       Include a string value representing the path to a configuration file that has references for each of the configured Swift account(s)/backing stores. By default, no file path is specified and customized Swift referencing is diabled. Configuring this option is highly recommended while using Swift storage backend for image storage as it helps avoid storage of credentials in the database.

       Possible values:

       * None

       * String value representing a vaid configuration file path

       Related options:

       * None
   * - ``swift_store_key`` = ``None``
     - (String) Auth key for the user authenticating against the Swift authentication service.
   * - ``swift_store_user`` = ``None``
     - (String) The user to authenticate against the Swift authentication service.
   * - **[glance_store]**
     -
   * - ``default_swift_reference`` = ``ref1``
     - (String) Reference to default Swift account/backing store parameters.

       Provide a string value representing a reference to the default set of parameters required for using swift account/backing store for image storage. The default reference value for this configuration option is 'ref1'. This configuration option dereferences the parameters and facilitates image storage in Swift storage backend every time a new image is added.

       Possible values:

       * A valid string value

       Related options:

       * None
   * - ``swift_store_admin_tenants`` =
     - (List) List of tenants that will be granted admin access.

       This is a list of tenants that will be granted read/write access on all Swift containers created by Glance in multi-tenant mode. The default value is an empty list.

       Possible values:

       * A comma separated list of strings representing UUIDs of Keystone projects/tenants

       Related options:

       * None
   * - ``swift_store_auth_address`` = ``None``
     - (String) DEPRECATED: The address where the Swift authentication service is listening. The option 'auth_address' in the Swift back-end configuration file is used instead.
   * - ``swift_store_auth_insecure`` = ``False``
     - (Boolean) Set verification of the server certificate.

       This boolean determines whether or not to verify the server certificate. If this option is set to True, swiftclient won't check for a valid SSL certificate when authenticating. If the option is set to False, then the default CA truststore is used for verification.

       Possible values:

       * True

       * False

       Related options:

       * swift_store_cacert
   * - ``swift_store_auth_version`` = ``2``
     - (String) DEPRECATED: Version of the authentication service to use. Valid versions are 2 and 3 for keystone and 1 (deprecated) for swauth and rackspace. The option 'auth_version' in the Swift back-end configuration file is used instead.
   * - ``swift_store_cacert`` = ``/etc/ssl/certs/ca-certificates.crt``
     - (String) Path to the CA bundle file.

       This configuration option enables the operator to specify the path to a custom Certificate Authority file for SSL verification when connecting to Swift.

       Possible values:

       * A valid path to a CA file

       Related options:

       * swift_store_auth_insecure
   * - ``swift_store_config_file`` = ``None``
     - (String) Absolute path to the file containing the swift account(s) configurations.

       Include a string value representing the path to a configuration file that has references for each of the configured Swift account(s)/backing stores. By default, no file path is specified and customized Swift referencing is disabled. Configuring this option is highly recommended while using Swift storage backend for image storage as it avoids storage of credentials in the database.

       NOTE: Please do not configure this option if you have set ``swift_store_multi_tenant`` to ``True``.

       Possible values:

       * String value representing an absolute path on the glance-api node

       Related options:

       * swift_store_multi_tenant
   * - ``swift_store_container`` = ``glance``
     - (String) Name of single container to store images/name prefix for multiple containers

       When a single container is being used to store images, this configuration option indicates the container within the Glance account to be used for storing all images. When multiple containers are used to store images, this will be the name prefix for all containers. Usage of single/multiple containers can be controlled using the configuration option ``swift_store_multiple_containers_seed``.

       When using multiple containers, the containers will be named after the value set for this configuration option with the first N chars of the image UUID as the suffix delimited by an underscore (where N is specified by ``swift_store_multiple_containers_seed``).

       Example: if the seed is set to 3 and swift_store_container = ``glance``, then an image with UUID ``fdae39a1-bac5-4238-aba4-69bcc726e848`` would be placed in the container ``glance_fda``. All dashes in the UUID are included when creating the container name but do not count toward the character limit, so when N=10 the container name would be ``glance_fdae39a1-ba.``

       Possible values:

       * If using single container, this configuration option can be any string that is a valid swift container name in Glance's Swift account

       * If using multiple containers, this configuration option can be any string as long as it satisfies the container naming rules enforced by Swift. The value of ``swift_store_multiple_containers_seed`` should be taken into account as well.

       Related options:

       * ``swift_store_multiple_containers_seed``

       * ``swift_store_multi_tenant``

       * ``swift_store_create_container_on_put``
   * - ``swift_store_create_container_on_put`` = ``False``
     - (Boolean) Create container, if it doesn't already exist, when uploading image.

       At the time of uploading an image, if the corresponding container doesn't exist, it will be created provided this configuration option is set to True. By default, it won't be created. This behavior is applicable for both single and multiple containers mode.

       Possible values:

       * True

       * False

       Related options:

       * None
   * - ``swift_store_endpoint`` = ``https://swift.openstack.example.org/v1/path_not_including_container_name``
     - (String) The URL endpoint to use for Swift backend storage.

       Provide a string value representing the URL endpoint to use for storing Glance images in Swift store. By default, an endpoint is not set and the storage URL returned by ``auth`` is used. Setting an endpoint with ``swift_store_endpoint`` overrides the storage URL and is used for Glance image storage.

       NOTE: The URL should include the path up to, but excluding the container. The location of an object is obtained by appending the container and object to the configured URL.

       Possible values:

       * String value representing a valid URL path up to a Swift container

       Related Options:

       * None
   * - ``swift_store_endpoint_type`` = ``publicURL``
     - (String) Endpoint Type of Swift service.

       This string value indicates the endpoint type to use to fetch the Swift endpoint. The endpoint type determines the actions the user will be allowed to perform, for instance, reading and writing to the Store. This setting is only used if swift_store_auth_version is greater than 1.

       Possible values:

       * publicURL

       * adminURL

       * internalURL

       Related options:

       * swift_store_endpoint
   * - ``swift_store_expire_soon_interval`` = ``60``
     - (Integer) Time in seconds defining the size of the window in which a new token may be requested before the current token is due to expire.

       Typically, the Swift storage driver fetches a new token upon the expiration of the current token to ensure continued access to Swift. However, some Swift transactions (like uploading image segments) may not recover well if the token expires on the fly.

       Hence, by fetching a new token before the current token expiration, we make sure that the token does not expire or is close to expiry before a transaction is attempted. By default, the Swift storage driver requests for a new token 60 seconds or less before the current token expiration.

       Possible values:

       * Zero

       * Positive integer value

       Related Options:

       * None
   * - ``swift_store_key`` = ``None``
     - (String) DEPRECATED: Auth key for the user authenticating against the Swift authentication service. The option 'key' in the Swift back-end configuration file is used to set the authentication key instead.
   * - ``swift_store_large_object_chunk_size`` = ``200``
     - (Integer) The maximum size, in MB, of the segments when image data is segmented.

       When image data is segmented to upload images that are larger than the limit enforced by the Swift cluster, image data is broken into segments that are no bigger than the size specified by this configuration option. Refer to ``swift_store_large_object_size`` for more detail.

       For example: if ``swift_store_large_object_size`` is 5GB and ``swift_store_large_object_chunk_size`` is 1GB, an image of size 6.2GB will be segmented into 7 segments where the first six segments will be 1GB in size and the seventh segment will be 0.2GB.

       Possible values:

       * A positive integer that is less than or equal to the large object limit enforced by Swift cluster in consideration.

       Related options:

       * ``swift_store_large_object_size``
   * - ``swift_store_large_object_size`` = ``5120``
     - (Integer) The size threshold, in MB, after which Glance will start segmenting image data.

       Swift has an upper limit on the size of a single uploaded object. By default, this is 5GB. To upload objects bigger than this limit, objects are segmented into multiple smaller objects that are tied together with a manifest file. For more detail, refer to http://docs.openstack.org/developer/swift/overview_large_objects.html

       This configuration option specifies the size threshold over which the Swift driver will start segmenting image data into multiple smaller files. Currently, the Swift driver only supports creating Dynamic Large Objects.

       NOTE: This should be set by taking into account the large object limit enforced by the Swift cluster in consideration.

       Possible values:

       * A positive integer that is less than or equal to the large object limit enforced by the Swift cluster in consideration.

       Related options:

       * ``swift_store_large_object_chunk_size``
   * - ``swift_store_multi_tenant`` = ``False``
     - (Boolean) Store images in tenant's Swift account.

       This enables multi-tenant storage mode which causes Glance images to be stored in tenant specific Swift accounts. If this is disabled, Glance stores all images in its own account. More details multi-tenant store can be found at https://wiki.openstack.org/wiki/GlanceSwiftTenantSpecificStorage

       NOTE: If using multi-tenant swift store, please make sure that you do not set a swift configuration file with the 'swift_store_config_file' option.

       Possible values:

       * True

       * False

       Related options:

       * swift_store_config_file
   * - ``swift_store_multiple_containers_seed`` = ``0``
     - (Integer) Seed indicating the number of containers to use for storing images.

       When using a single-tenant store, images can be stored in one or more than one containers. When set to 0, all images will be stored in one single container. When set to an integer value between 1 and 32, multiple containers will be used to store images. This configuration option will determine how many containers are created. The total number of containers that will be used is equal to 16^N, so if this config option is set to 2, then 16^2=256 containers will be used to store images.

       Please refer to ``swift_store_container`` for more detail on the naming convention. More detail about using multiple containers can be found at https://specs.openstack.org/openstack/glance-specs/specs/kilo/swift-store-multiple-containers.html

       NOTE: This is used only when swift_store_multi_tenant is disabled.

       Possible values:

       * A non-negative integer less than or equal to 32

       Related options:

       * ``swift_store_container``

       * ``swift_store_multi_tenant``

       * ``swift_store_create_container_on_put``
   * - ``swift_store_region`` = ``RegionTwo``
     - (String) The region of Swift endpoint to use by Glance.

       Provide a string value representing a Swift region where Glance can connect to for image storage. By default, there is no region set.

       When Glance uses Swift as the storage backend to store images for a specific tenant that has multiple endpoints, setting of a Swift region with ``swift_store_region`` allows Glance to connect to Swift in the specified region as opposed to a single region connectivity.

       This option can be configured for both single-tenant and multi-tenant storage.

       NOTE: Setting the region with ``swift_store_region`` is tenant-specific and is necessary ``only if`` the tenant has multiple endpoints across different regions.

       Possible values:

       * A string value representing a valid Swift region.

       Related Options:

       * None
   * - ``swift_store_retry_get_count`` = ``0``
     - (Integer) The number of times a Swift download will be retried before the request fails.

       Provide an integer value representing the number of times an image download must be retried before erroring out. The default value is zero (no retry on a failed image download). When set to a positive integer value, ``swift_store_retry_get_count`` ensures that the download is attempted this many more times upon a download failure before sending an error message.

       Possible values:

       * Zero

       * Positive integer value

       Related Options:

       * None
   * - ``swift_store_service_type`` = ``object-store``
     - (String) Type of Swift service to use.

       Provide a string value representing the service type to use for storing images while using Swift backend storage. The default service type is set to ``object-store``.

       NOTE: If ``swift_store_auth_version`` is set to 2, the value for this configuration option needs to be ``object-store``. If using a higher version of Keystone or a different auth scheme, this option may be modified.

       Possible values:

       * A string representing a valid service type for Swift storage.

       Related Options:

       * None
   * - ``swift_store_ssl_compression`` = ``True``
     - (Boolean) SSL layer compression for HTTPS Swift requests.

       Provide a boolean value to determine whether or not to compress HTTPS Swift requests for images at the SSL layer. By default, compression is enabled.

       When using Swift as the backend store for Glance image storage, SSL layer compression of HTTPS Swift requests can be set using this option. If set to False, SSL layer compression of HTTPS Swift requests is disabled. Disabling this option may improve performance for images which are already in a compressed format, for example, qcow2.

       Possible values:

       * True

       * False

       Related Options:

       * None
   * - ``swift_store_use_trusts`` = ``True``
     - (Boolean) Use trusts for multi-tenant Swift store.

       This option instructs the Swift store to create a trust for each add/get request when the multi-tenant store is in use. Using trusts allows the Swift store to avoid problems that can be caused by an authentication token expiring during the upload or download of data.

       By default, ``swift_store_use_trusts`` is set to ``True``(use of trusts is enabled). If set to ``False``, a user token is used for the Swift connection instead, eliminating the overhead of trust creation.

       NOTE: This option is considered only when ``swift_store_multi_tenant`` is set to ``True``

       Possible values:

       * True

       * False

       Related options:

       * swift_store_multi_tenant
   * - ``swift_store_user`` = ``None``
     - (String) DEPRECATED: The user to authenticate against the Swift authentication service. The option 'user' in the Swift back-end configuration file is set instead.
