New, updated, and deprecated options in Ocata for Message service
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

..
  Warning: Do not edit this file. It is automatically generated and your
  changes will be overwritten. The tool to do so lives in the
  openstack-doc-tools repository.

.. list-table:: New options
   :header-rows: 1
   :class: config-ref-table

   * - Option = default value
     - (Type) Help string
   * - ``[DEFAULT] conn_pool_min_size = 2``
     - (IntOpt) The pool size limit for connections expiration policy
   * - ``[DEFAULT] conn_pool_ttl = 1200``
     - (IntOpt) The time-to-live in sec of idle connections in the pool
   * - ``[DEFAULT] control_exchange = openstack``
     - (StrOpt) The default exchange under which topics are scoped. May be overridden by an exchange name specified in the transport_url option.
   * - ``[DEFAULT] executor_thread_pool_size = 64``
     - (IntOpt) Size of executor thread pool.
   * - ``[DEFAULT] rpc_ack_timeout_base = 15``
     - (IntOpt) Number of seconds to wait for an ack from a cast/call. After each retry attempt this timeout is multiplied by some specified multiplier.
   * - ``[DEFAULT] rpc_ack_timeout_multiplier = 2``
     - (IntOpt) Number to multiply base ack timeout by after each retry attempt.
   * - ``[DEFAULT] rpc_backend = rabbit``
     - (StrOpt) The messaging driver to use, defaults to rabbit. Other drivers include amqp and zmq.
   * - ``[DEFAULT] rpc_conn_pool_size = 30``
     - (IntOpt) Size of RPC connection pool.
   * - ``[DEFAULT] rpc_message_ttl = 300``
     - (IntOpt) Expiration timeout in seconds of a sent/received message after which it is not tracked anymore by a client/server.
   * - ``[DEFAULT] rpc_poll_timeout = 1``
     - (IntOpt) The default number of seconds that poll should wait. Poll raises timeout exception when timeout expired.
   * - ``[DEFAULT] rpc_response_timeout = 60``
     - (IntOpt) Seconds to wait for a response from a call.
   * - ``[DEFAULT] rpc_retry_attempts = 3``
     - (IntOpt) Default number of message sending attempts in case of any problems occurred: positive value N means at most N retries, 0 means no retries, None or -1 (or any other negative values) mean to retry forever. This option is used only if acknowledgments are enabled.
   * - ``[DEFAULT] rpc_thread_pool_size = 100``
     - (IntOpt) Maximum number of (green) threads to work concurrently.
   * - ``[DEFAULT] rpc_use_acks = False``
     - (BoolOpt) Wait for message acknowledgements from receivers. This mechanism works only via proxy without PUB/SUB.
   * - ``[DEFAULT] rpc_zmq_bind_address = *``
     - (StrOpt) ZeroMQ bind address. Should be a wildcard (*), an ethernet interface, or IP. The "host" option should point or resolve to this address.
   * - ``[DEFAULT] rpc_zmq_bind_port_retries = 100``
     - (IntOpt) Number of retries to find free port number before fail with ZMQBindError.
   * - ``[DEFAULT] rpc_zmq_contexts = 1``
     - (IntOpt) Number of ZeroMQ contexts, defaults to 1.
   * - ``[DEFAULT] rpc_zmq_host = localhost``
     - (StrOpt) Name of this node. Must be a valid hostname, FQDN, or IP address. Must match "host" option, if running Nova.
   * - ``[DEFAULT] rpc_zmq_ipc_dir = /var/run/openstack``
     - (StrOpt) Directory for holding IPC sockets.
   * - ``[DEFAULT] rpc_zmq_matchmaker = redis``
     - (StrOpt) MatchMaker driver.
   * - ``[DEFAULT] rpc_zmq_max_port = 65536``
     - (IntOpt) Maximal port number for random ports range.
   * - ``[DEFAULT] rpc_zmq_min_port = 49153``
     - (PortOpt) Minimal port number for random ports range.
   * - ``[DEFAULT] rpc_zmq_serialization = json``
     - (StrOpt) Default serialization mechanism for serializing/deserializing outgoing/incoming messages
   * - ``[DEFAULT] rpc_zmq_topic_backlog = None``
     - (IntOpt) Maximum number of ingress messages to locally buffer per topic. Default is unlimited.
   * - ``[DEFAULT] subscribe_on =``
     - (ListOpt) List of publisher hosts SubConsumer can subscribe on. This option has higher priority then the default publishers list taken from the matchmaker.
   * - ``[DEFAULT] transport_url = None``
     - (StrOpt) A URL representing the messaging driver to use and its full configuration.
   * - ``[DEFAULT] use_dynamic_connections = False``
     - (BoolOpt) This option makes direct connections dynamic or static. It makes sense only with use_router_proxy=False which means to use direct connections for direct message types (ignored otherwise).
   * - ``[DEFAULT] use_pub_sub = False``
     - (BoolOpt) Use PUB/SUB pattern for fanout methods. PUB/SUB always uses proxy.
   * - ``[DEFAULT] use_router_proxy = False``
     - (BoolOpt) Use ROUTER remote proxy.
   * - ``[DEFAULT] zmq_failover_connections = 2``
     - (IntOpt) How many additional connections to a host will be made for failover reasons. This option is actual only in dynamic connections mode.
   * - ``[DEFAULT] zmq_immediate = True``
     - (BoolOpt) This option configures round-robin mode in zmq socket. True means not keeping a queue when server side disconnects. False means to keep queue and messages even if server is disconnected, when the server appears we send all accumulated messages to it.
   * - ``[DEFAULT] zmq_linger = -1``
     - (IntOpt) Number of seconds to wait before all pending messages will be sent after closing a socket. The default value of -1 specifies an infinite linger period. The value of 0 specifies no linger period. Pending messages shall be discarded immediately when the socket is closed. Positive values specify an upper bound for the linger period.
   * - ``[DEFAULT] zmq_target_expire = 300``
     - (IntOpt) Expiration timeout in seconds of a name service record about existing target ( < 0 means no timeout).
   * - ``[DEFAULT] zmq_target_update = 180``
     - (IntOpt) Update period in seconds of a name service record about existing target.
   * - ``[DEFAULT] zmq_tcp_keepalive = -1``
     - (IntOpt) Enable/disable TCP keepalive (KA) mechanism. The default value of -1 (or any other negative value) means to skip any overrides and leave it to OS default; 0 and 1 (or any other positive value) mean to disable and enable the option respectively.
   * - ``[DEFAULT] zmq_tcp_keepalive_cnt = -1``
     - (IntOpt) The number of retransmissions to be carried out before declaring that remote end is not available. The default value of -1 (or any other negative value and 0) means to skip any overrides and leave it to OS default.
   * - ``[DEFAULT] zmq_tcp_keepalive_idle = -1``
     - (IntOpt) The duration between two keepalive transmissions in idle condition. The unit is platform dependent, for example, seconds in Linux, milliseconds in Windows etc. The default value of -1 (or any other negative value and 0) means to skip any overrides and leave it to OS default.
   * - ``[DEFAULT] zmq_tcp_keepalive_intvl = -1``
     - (IntOpt) The duration between two successive keepalive retransmissions, if acknowledgement to the previous keepalive transmission is not received. The unit is platform dependent, for example, seconds in Linux, milliseconds in Windows etc. The default value of -1 (or any other negative value and 0) means to skip any overrides and leave it to OS default.
   * - ``[drivers:message_store:swift] auth_url = http://127.0.0.1:5000/v3/``
     - (StrOpt) URI of Keystone endpoint to discover Swift
   * - ``[drivers:message_store:swift] insecure = False``
     - (StrOpt) Don't check SSL certificate
   * - ``[drivers:message_store:swift] uri = swift://demo:nomoresecrete@/demo``
     - (StrOpt) Custom URI describing the swift connection.
   * - ``[matchmaker_redis] check_timeout = 20000``
     - (IntOpt) Time in ms to wait before the transaction is killed.
   * - ``[matchmaker_redis] host = 127.0.0.1``
     - (StrOpt) Host to locate redis.
   * - ``[matchmaker_redis] password =``
     - (StrOpt) Password for Redis server (optional).
   * - ``[matchmaker_redis] port = 6379``
     - (PortOpt) Use this port to connect to redis host.
   * - ``[matchmaker_redis] sentinel_group_name = oslo-messaging-zeromq``
     - (StrOpt) Redis replica set name.
   * - ``[matchmaker_redis] sentinel_hosts =``
     - (ListOpt) List of Redis Sentinel hosts (fault tolerance mode), e.g., [host:port, host1:port ... ]
   * - ``[matchmaker_redis] socket_timeout = 10000``
     - (IntOpt) Timeout in ms on blocking socket operations.
   * - ``[matchmaker_redis] wait_timeout = 2000``
     - (IntOpt) Time in ms to wait between connection attempts.
   * - ``[notification] external_confirmation_url = None``
     - (StrOpt) The confirmation page url that will be used in email subscription confirmation before notification.
   * - ``[notification] subscription_confirmation_email_template = {'topic': 'Zaqar Notification - Subscription Confirmation', 'body': 'You have chosen to subscribe to the queue: {0}. This queue belongs to project: {1}. To confirm this subscription, click or visit this link below: {2}', 'sender': 'Zaqar Notifications <no-reply@openstack.org>'}``
     - (DictOpt) Defines the set of subscription confirmation email content, including topic, body and sender. There is a mapping is {0} -> queue name, {1} ->project id, {2}-> confirm url in body string. User can use any of the three value. But they can't use more than three.
   * - ``[notification] unsubscribe_confirmation_email_template = {'topic': 'Zaqar Notification - Unsubscribe Confirmation', 'body': 'You have unsubscribed successfully to the queue: {0}. This queue belongs to project: {1}. To resubscribe this subscription, click or visit this link below: {2}', 'sender': 'Zaqar Notifications <no-reply@openstack.org>'}``
     - (DictOpt) Defines the set of unsubscribe confirmation email content, including topic, body and sender. There is a mapping is {0} -> queue name, {1} ->project id, {2}-> confirm url in body string. User can use any of the three value. But they can't use more than three.
   * - ``[oslo_concurrency] disable_process_locking = False``
     - (BoolOpt) Enables or disables inter-process locks.
   * - ``[oslo_concurrency] lock_path = None``
     - (StrOpt) Directory to use for lock files. For security, the specified directory should only be writable by the user running the processes that need locking. Defaults to environment variable OSLO_LOCK_PATH. If external locks are used, a lock path must be set.
   * - ``[oslo_messaging_amqp] addressing_mode = dynamic``
     - (StrOpt) Indicates the addressing mode used by the driver. Permitted values: 'legacy' - use legacy non-routable addressing 'routable' - use routable addresses 'dynamic' - use legacy addresses if the message bus does not support routing otherwise use routable addressing
   * - ``[oslo_messaging_amqp] allow_insecure_clients = False``
     - (BoolOpt) Accept clients using either SSL or plain TCP
   * - ``[oslo_messaging_amqp] anycast_address = anycast``
     - (StrOpt) Appended to the address prefix when sending to a group of consumers. Used by the message bus to identify messages that should be delivered in a round-robin fashion across consumers.
   * - ``[oslo_messaging_amqp] broadcast_prefix = broadcast``
     - (StrOpt) address prefix used when broadcasting to all servers
   * - ``[oslo_messaging_amqp] connection_retry_backoff = 2``
     - (IntOpt) Increase the connection_retry_interval by this many seconds after each unsuccessful failover attempt.
   * - ``[oslo_messaging_amqp] connection_retry_interval = 1``
     - (IntOpt) Seconds to pause before attempting to re-connect.
   * - ``[oslo_messaging_amqp] connection_retry_interval_max = 30``
     - (IntOpt) Maximum limit for connection_retry_interval + connection_retry_backoff
   * - ``[oslo_messaging_amqp] container_name = None``
     - (StrOpt) Name for the AMQP container. must be globally unique. Defaults to a generated UUID
   * - ``[oslo_messaging_amqp] default_notification_exchange = None``
     - (StrOpt) Exchange name used in notification addresses. Exchange name resolution precedence: Target.exchange if set else default_notification_exchange if set else control_exchange if set else 'notify'
   * - ``[oslo_messaging_amqp] default_notify_timeout = 30``
     - (IntOpt) The deadline for a sent notification message delivery. Only used when caller does not provide a timeout expiry.
   * - ``[oslo_messaging_amqp] default_reply_retry = 0``
     - (IntOpt) The maximum number of attempts to re-send a reply message which failed due to a recoverable error.
   * - ``[oslo_messaging_amqp] default_reply_timeout = 30``
     - (IntOpt) The deadline for an rpc reply message delivery.
   * - ``[oslo_messaging_amqp] default_rpc_exchange = None``
     - (StrOpt) Exchange name used in RPC addresses. Exchange name resolution precedence: Target.exchange if set else default_rpc_exchange if set else control_exchange if set else 'rpc'
   * - ``[oslo_messaging_amqp] default_send_timeout = 30``
     - (IntOpt) The deadline for an rpc cast or call message delivery. Only used when caller does not provide a timeout expiry.
   * - ``[oslo_messaging_amqp] default_sender_link_timeout = 600``
     - (IntOpt) The duration to schedule a purge of idle sender links. Detach link after expiry.
   * - ``[oslo_messaging_amqp] group_request_prefix = unicast``
     - (StrOpt) address prefix when sending to any server in group
   * - ``[oslo_messaging_amqp] idle_timeout = 0``
     - (IntOpt) Timeout for inactive connections (in seconds)
   * - ``[oslo_messaging_amqp] link_retry_delay = 10``
     - (IntOpt) Time to pause between re-connecting an AMQP 1.0 link that failed due to a recoverable error.
   * - ``[oslo_messaging_amqp] multicast_address = multicast``
     - (StrOpt) Appended to the address prefix when sending a fanout message. Used by the message bus to identify fanout messages.
   * - ``[oslo_messaging_amqp] notify_address_prefix = openstack.org/om/notify``
     - (StrOpt) Address prefix for all generated Notification addresses
   * - ``[oslo_messaging_amqp] notify_server_credit = 100``
     - (IntOpt) Window size for incoming Notification messages
   * - ``[oslo_messaging_amqp] password =``
     - (StrOpt) Password for message broker authentication
   * - ``[oslo_messaging_amqp] pre_settled = ['rpc-cast', 'rpc-reply']``
     - (MultiStrOpt) Send messages of this type pre-settled. Pre-settled messages will not receive acknowledgement from the peer. Note well: pre-settled messages may be silently discarded if the delivery fails. Permitted values: 'rpc-call' - send RPC Calls pre-settled 'rpc-reply'- send RPC Replies pre-settled 'rpc-cast' - Send RPC Casts pre-settled 'notify' - Send Notifications pre-settled
   * - ``[oslo_messaging_amqp] reply_link_credit = 200``
     - (IntOpt) Window size for incoming RPC Reply messages.
   * - ``[oslo_messaging_amqp] rpc_address_prefix = openstack.org/om/rpc``
     - (StrOpt) Address prefix for all generated RPC addresses
   * - ``[oslo_messaging_amqp] rpc_server_credit = 100``
     - (IntOpt) Window size for incoming RPC Request messages
   * - ``[oslo_messaging_amqp] sasl_config_dir =``
     - (StrOpt) Path to directory that contains the SASL configuration
   * - ``[oslo_messaging_amqp] sasl_config_name =``
     - (StrOpt) Name of configuration file (without .conf suffix)
   * - ``[oslo_messaging_amqp] sasl_mechanisms =``
     - (StrOpt) Space separated list of acceptable SASL mechanisms
   * - ``[oslo_messaging_amqp] server_request_prefix = exclusive``
     - (StrOpt) address prefix used when sending to a specific server
   * - ``[oslo_messaging_amqp] ssl_ca_file =``
     - (StrOpt) CA certificate PEM file used to verify the server's certificate
   * - ``[oslo_messaging_amqp] ssl_cert_file =``
     - (StrOpt) Self-identifying certificate PEM file for client authentication
   * - ``[oslo_messaging_amqp] ssl_key_file =``
     - (StrOpt) Private key PEM file used to sign ssl_cert_file certificate (optional)
   * - ``[oslo_messaging_amqp] ssl_key_password = None``
     - (StrOpt) Password for decrypting ssl_key_file (if encrypted)
   * - ``[oslo_messaging_amqp] trace = False``
     - (BoolOpt) Debug: dump AMQP frames to stdout
   * - ``[oslo_messaging_amqp] unicast_address = unicast``
     - (StrOpt) Appended to the address prefix when sending to a particular RPC/Notification server. Used by the message bus to identify messages sent to a single destination.
   * - ``[oslo_messaging_amqp] username =``
     - (StrOpt) User name for message broker authentication
   * - ``[oslo_messaging_kafka] conn_pool_min_size = 2``
     - (IntOpt) The pool size limit for connections expiration policy
   * - ``[oslo_messaging_kafka] conn_pool_ttl = 1200``
     - (IntOpt) The time-to-live in sec of idle connections in the pool
   * - ``[oslo_messaging_kafka] consumer_group = oslo_messaging_consumer``
     - (StrOpt) Group id for Kafka consumer. Consumers in one group will coordinate message consumption
   * - ``[oslo_messaging_kafka] kafka_consumer_timeout = 1.0``
     - (IntOpt) Default timeout(s) for Kafka consumers
   * - ``[oslo_messaging_kafka] kafka_default_host = localhost``
     - (StrOpt) Default Kafka broker Host
   * - ``[oslo_messaging_kafka] kafka_default_port = 9092``
     - (PortOpt) Default Kafka broker Port
   * - ``[oslo_messaging_kafka] kafka_max_fetch_bytes = 1048576``
     - (IntOpt) Max fetch bytes of Kafka consumer
   * - ``[oslo_messaging_kafka] pool_size = 10``
     - (IntOpt) Pool Size for Kafka Consumers
   * - ``[oslo_messaging_kafka] producer_batch_size = 16384``
     - (IntOpt) Size of batch for the producer async send
   * - ``[oslo_messaging_kafka] producer_batch_timeout = 0.0``
     - (FloatOpt) Upper bound on the delay for KafkaProducer batching in seconds
   * - ``[oslo_messaging_notifications] driver = []``
     - (MultiStrOpt) The Drivers(s) to handle sending notifications. Possible values are messaging, messagingv2, routing, log, test, noop
   * - ``[oslo_messaging_notifications] topics = notifications``
     - (ListOpt) AMQP topic used for OpenStack notifications.
   * - ``[oslo_messaging_notifications] transport_url = None``
     - (StrOpt) A URL representing the messaging driver to use for notifications. If not set, we fall back to the same configuration used for RPC.
   * - ``[oslo_messaging_rabbit] amqp_auto_delete = False``
     - (BoolOpt) Auto-delete queues in AMQP.
   * - ``[oslo_messaging_rabbit] amqp_durable_queues = False``
     - (BoolOpt) Use durable queues in AMQP.
   * - ``[oslo_messaging_rabbit] channel_max = None``
     - (IntOpt) Maximum number of channels to allow
   * - ``[oslo_messaging_rabbit] connection_factory = single``
     - (StrOpt) Connection factory implementation
   * - ``[oslo_messaging_rabbit] default_notification_exchange = ${control_exchange}_notification``
     - (StrOpt) Exchange name for sending notifications
   * - ``[oslo_messaging_rabbit] default_notification_retry_attempts = -1``
     - (IntOpt) Reconnecting retry count in case of connectivity problem during sending notification, -1 means infinite retry.
   * - ``[oslo_messaging_rabbit] default_rpc_exchange = ${control_exchange}_rpc``
     - (StrOpt) Exchange name for sending RPC messages
   * - ``[oslo_messaging_rabbit] default_rpc_retry_attempts = -1``
     - (IntOpt) Reconnecting retry count in case of connectivity problem during sending RPC message, -1 means infinite retry. If actual retry attempts in not 0 the rpc request could be processed more than one time
   * - ``[oslo_messaging_rabbit] default_serializer_type = json``
     - (StrOpt) Default serialization mechanism for serializing/deserializing outgoing/incoming messages
   * - ``[oslo_messaging_rabbit] fake_rabbit = False``
     - (BoolOpt) Deprecated, use rpc_backend=kombu+memory or rpc_backend=fake
   * - ``[oslo_messaging_rabbit] frame_max = None``
     - (IntOpt) The maximum byte size for an AMQP frame
   * - ``[oslo_messaging_rabbit] heartbeat_interval = 3``
     - (IntOpt) How often to send heartbeats for consumer's connections
   * - ``[oslo_messaging_rabbit] heartbeat_rate = 2``
     - (IntOpt) How often times during the heartbeat_timeout_threshold we check the heartbeat.
   * - ``[oslo_messaging_rabbit] heartbeat_timeout_threshold = 60``
     - (IntOpt) Number of seconds after which the Rabbit broker is considered down if heartbeat's keep-alive fails (0 disable the heartbeat). EXPERIMENTAL
   * - ``[oslo_messaging_rabbit] host_connection_reconnect_delay = 0.25``
     - (FloatOpt) Set delay for reconnection to some host which has connection error
   * - ``[oslo_messaging_rabbit] kombu_compression = None``
     - (StrOpt) EXPERIMENTAL: Possible values are: gzip, bz2. If not set compression will not be used. This option may not be available in future versions.
   * - ``[oslo_messaging_rabbit] kombu_failover_strategy = round-robin``
     - (StrOpt) Determines how the next RabbitMQ node is chosen in case the one we are currently connected to becomes unavailable. Takes effect only if more than one RabbitMQ node is provided in config.
   * - ``[oslo_messaging_rabbit] kombu_missing_consumer_retry_timeout = 60``
     - (IntOpt) How long to wait a missing client before abandoning to send it its replies. This value should not be longer than rpc_response_timeout.
   * - ``[oslo_messaging_rabbit] kombu_reconnect_delay = 1.0``
     - (FloatOpt) How long to wait before reconnecting in response to an AMQP consumer cancel notification.
   * - ``[oslo_messaging_rabbit] kombu_ssl_ca_certs =``
     - (StrOpt) SSL certification authority file (valid only if SSL enabled).
   * - ``[oslo_messaging_rabbit] kombu_ssl_certfile =``
     - (StrOpt) SSL cert file (valid only if SSL enabled).
   * - ``[oslo_messaging_rabbit] kombu_ssl_keyfile =``
     - (StrOpt) SSL key file (valid only if SSL enabled).
   * - ``[oslo_messaging_rabbit] kombu_ssl_version =``
     - (StrOpt) SSL version to use (valid only if SSL enabled). Valid values are TLSv1 and SSLv23. SSLv2, SSLv3, TLSv1_1, and TLSv1_2 may be available on some distributions.
   * - ``[oslo_messaging_rabbit] notification_listener_prefetch_count = 100``
     - (IntOpt) Max number of not acknowledged message which RabbitMQ can send to notification listener.
   * - ``[oslo_messaging_rabbit] notification_persistence = False``
     - (BoolOpt) Persist notification messages.
   * - ``[oslo_messaging_rabbit] notification_retry_delay = 0.25``
     - (FloatOpt) Reconnecting retry delay in case of connectivity problem during sending notification message
   * - ``[oslo_messaging_rabbit] pool_max_overflow = 0``
     - (IntOpt) Maximum number of connections to create above `pool_max_size`.
   * - ``[oslo_messaging_rabbit] pool_max_size = 30``
     - (IntOpt) Maximum number of connections to keep queued.
   * - ``[oslo_messaging_rabbit] pool_recycle = 600``
     - (IntOpt) Lifetime of a connection (since creation) in seconds or None for no recycling. Expired connections are closed on acquire.
   * - ``[oslo_messaging_rabbit] pool_stale = 60``
     - (IntOpt) Threshold at which inactive (since release) connections are considered stale in seconds or None for no staleness. Stale connections are closed on acquire.
   * - ``[oslo_messaging_rabbit] pool_timeout = 30``
     - (IntOpt) Default number of seconds to wait for a connections to available
   * - ``[oslo_messaging_rabbit] rabbit_ha_queues = False``
     - (BoolOpt) Try to use HA queues in RabbitMQ (x-ha-policy: all). If you change this option, you must wipe the RabbitMQ database. In RabbitMQ 3.0, queue mirroring is no longer controlled by the x-ha-policy argument when declaring a queue. If you just want to make sure that all queues (except those with auto-generated names) are mirrored across all nodes, run: "rabbitmqctl set_policy HA '^(?!amq\.).*' '{"ha-mode": "all"}' "
   * - ``[oslo_messaging_rabbit] rabbit_host = localhost``
     - (StrOpt) The RabbitMQ broker address where a single node is used.
   * - ``[oslo_messaging_rabbit] rabbit_hosts = $rabbit_host:$rabbit_port``
     - (ListOpt) RabbitMQ HA cluster host:port pairs.
   * - ``[oslo_messaging_rabbit] rabbit_interval_max = 30``
     - (IntOpt) Maximum interval of RabbitMQ connection retries. Default is 30 seconds.
   * - ``[oslo_messaging_rabbit] rabbit_login_method = AMQPLAIN``
     - (StrOpt) The RabbitMQ login method.
   * - ``[oslo_messaging_rabbit] rabbit_max_retries = 0``
     - (IntOpt) Maximum number of RabbitMQ connection retries. Default is 0 (infinite retry count).
   * - ``[oslo_messaging_rabbit] rabbit_password = guest``
     - (StrOpt) The RabbitMQ password.
   * - ``[oslo_messaging_rabbit] rabbit_port = 5672``
     - (PortOpt) The RabbitMQ broker port where a single node is used.
   * - ``[oslo_messaging_rabbit] rabbit_qos_prefetch_count = 0``
     - (IntOpt) Specifies the number of messages to prefetch. Setting to zero allows unlimited messages.
   * - ``[oslo_messaging_rabbit] rabbit_retry_backoff = 2``
     - (IntOpt) How long to backoff for between retries when connecting to RabbitMQ.
   * - ``[oslo_messaging_rabbit] rabbit_retry_interval = 1``
     - (IntOpt) How frequently to retry connecting with RabbitMQ.
   * - ``[oslo_messaging_rabbit] rabbit_transient_queues_ttl = 1800``
     - (IntOpt) Positive integer representing duration in seconds for queue TTL (x-expires). Queues which are unused for the duration of the TTL are automatically deleted. The parameter affects only reply and fanout queues.
   * - ``[oslo_messaging_rabbit] rabbit_use_ssl = False``
     - (BoolOpt) Connect over SSL for RabbitMQ.
   * - ``[oslo_messaging_rabbit] rabbit_userid = guest``
     - (StrOpt) The RabbitMQ userid.
   * - ``[oslo_messaging_rabbit] rabbit_virtual_host = /``
     - (StrOpt) The RabbitMQ virtual host.
   * - ``[oslo_messaging_rabbit] rpc_listener_prefetch_count = 100``
     - (IntOpt) Max number of not acknowledged message which RabbitMQ can send to rpc listener.
   * - ``[oslo_messaging_rabbit] rpc_queue_expiration = 60``
     - (IntOpt) Time to live for rpc queues without consumers in seconds.
   * - ``[oslo_messaging_rabbit] rpc_reply_exchange = ${control_exchange}_rpc_reply``
     - (StrOpt) Exchange name for receiving RPC replies
   * - ``[oslo_messaging_rabbit] rpc_reply_listener_prefetch_count = 100``
     - (IntOpt) Max number of not acknowledged message which RabbitMQ can send to rpc reply listener.
   * - ``[oslo_messaging_rabbit] rpc_reply_retry_attempts = -1``
     - (IntOpt) Reconnecting retry count in case of connectivity problem during sending reply. -1 means infinite retry during rpc_timeout
   * - ``[oslo_messaging_rabbit] rpc_reply_retry_delay = 0.25``
     - (FloatOpt) Reconnecting retry delay in case of connectivity problem during sending reply.
   * - ``[oslo_messaging_rabbit] rpc_retry_delay = 0.25``
     - (FloatOpt) Reconnecting retry delay in case of connectivity problem during sending RPC message
   * - ``[oslo_messaging_rabbit] socket_timeout = 0.25``
     - (FloatOpt) Set socket timeout in seconds for connection's socket
   * - ``[oslo_messaging_rabbit] ssl = None``
     - (BoolOpt) Enable SSL
   * - ``[oslo_messaging_rabbit] ssl_options = None``
     - (DictOpt) Arguments passed to ssl.wrap_socket
   * - ``[oslo_messaging_rabbit] tcp_user_timeout = 0.25``
     - (FloatOpt) Set TCP_USER_TIMEOUT in seconds for connection's socket
   * - ``[oslo_messaging_zmq] rpc_ack_timeout_base = 15``
     - (IntOpt) Number of seconds to wait for an ack from a cast/call. After each retry attempt this timeout is multiplied by some specified multiplier.
   * - ``[oslo_messaging_zmq] rpc_ack_timeout_multiplier = 2``
     - (IntOpt) Number to multiply base ack timeout by after each retry attempt.
   * - ``[oslo_messaging_zmq] rpc_message_ttl = 300``
     - (IntOpt) Expiration timeout in seconds of a sent/received message after which it is not tracked anymore by a client/server.
   * - ``[oslo_messaging_zmq] rpc_poll_timeout = 1``
     - (IntOpt) The default number of seconds that poll should wait. Poll raises timeout exception when timeout expired.
   * - ``[oslo_messaging_zmq] rpc_retry_attempts = 3``
     - (IntOpt) Default number of message sending attempts in case of any problems occurred: positive value N means at most N retries, 0 means no retries, None or -1 (or any other negative values) mean to retry forever. This option is used only if acknowledgments are enabled.
   * - ``[oslo_messaging_zmq] rpc_thread_pool_size = 100``
     - (IntOpt) Maximum number of (green) threads to work concurrently.
   * - ``[oslo_messaging_zmq] rpc_use_acks = False``
     - (BoolOpt) Wait for message acknowledgements from receivers. This mechanism works only via proxy without PUB/SUB.
   * - ``[oslo_messaging_zmq] rpc_zmq_bind_address = *``
     - (StrOpt) ZeroMQ bind address. Should be a wildcard (*), an ethernet interface, or IP. The "host" option should point or resolve to this address.
   * - ``[oslo_messaging_zmq] rpc_zmq_bind_port_retries = 100``
     - (IntOpt) Number of retries to find free port number before fail with ZMQBindError.
   * - ``[oslo_messaging_zmq] rpc_zmq_contexts = 1``
     - (IntOpt) Number of ZeroMQ contexts, defaults to 1.
   * - ``[oslo_messaging_zmq] rpc_zmq_host = localhost``
     - (StrOpt) Name of this node. Must be a valid hostname, FQDN, or IP address. Must match "host" option, if running Nova.
   * - ``[oslo_messaging_zmq] rpc_zmq_ipc_dir = /var/run/openstack``
     - (StrOpt) Directory for holding IPC sockets.
   * - ``[oslo_messaging_zmq] rpc_zmq_matchmaker = redis``
     - (StrOpt) MatchMaker driver.
   * - ``[oslo_messaging_zmq] rpc_zmq_max_port = 65536``
     - (IntOpt) Maximal port number for random ports range.
   * - ``[oslo_messaging_zmq] rpc_zmq_min_port = 49153``
     - (PortOpt) Minimal port number for random ports range.
   * - ``[oslo_messaging_zmq] rpc_zmq_serialization = json``
     - (StrOpt) Default serialization mechanism for serializing/deserializing outgoing/incoming messages
   * - ``[oslo_messaging_zmq] rpc_zmq_topic_backlog = None``
     - (IntOpt) Maximum number of ingress messages to locally buffer per topic. Default is unlimited.
   * - ``[oslo_messaging_zmq] subscribe_on =``
     - (ListOpt) List of publisher hosts SubConsumer can subscribe on. This option has higher priority then the default publishers list taken from the matchmaker.
   * - ``[oslo_messaging_zmq] use_dynamic_connections = False``
     - (BoolOpt) This option makes direct connections dynamic or static. It makes sense only with use_router_proxy=False which means to use direct connections for direct message types (ignored otherwise).
   * - ``[oslo_messaging_zmq] use_pub_sub = False``
     - (BoolOpt) Use PUB/SUB pattern for fanout methods. PUB/SUB always uses proxy.
   * - ``[oslo_messaging_zmq] use_router_proxy = False``
     - (BoolOpt) Use ROUTER remote proxy.
   * - ``[oslo_messaging_zmq] zmq_failover_connections = 2``
     - (IntOpt) How many additional connections to a host will be made for failover reasons. This option is actual only in dynamic connections mode.
   * - ``[oslo_messaging_zmq] zmq_immediate = True``
     - (BoolOpt) This option configures round-robin mode in zmq socket. True means not keeping a queue when server side disconnects. False means to keep queue and messages even if server is disconnected, when the server appears we send all accumulated messages to it.
   * - ``[oslo_messaging_zmq] zmq_linger = -1``
     - (IntOpt) Number of seconds to wait before all pending messages will be sent after closing a socket. The default value of -1 specifies an infinite linger period. The value of 0 specifies no linger period. Pending messages shall be discarded immediately when the socket is closed. Positive values specify an upper bound for the linger period.
   * - ``[oslo_messaging_zmq] zmq_target_expire = 300``
     - (IntOpt) Expiration timeout in seconds of a name service record about existing target ( < 0 means no timeout).
   * - ``[oslo_messaging_zmq] zmq_target_update = 180``
     - (IntOpt) Update period in seconds of a name service record about existing target.
   * - ``[oslo_messaging_zmq] zmq_tcp_keepalive = -1``
     - (IntOpt) Enable/disable TCP keepalive (KA) mechanism. The default value of -1 (or any other negative value) means to skip any overrides and leave it to OS default; 0 and 1 (or any other positive value) mean to disable and enable the option respectively.
   * - ``[oslo_messaging_zmq] zmq_tcp_keepalive_cnt = -1``
     - (IntOpt) The number of retransmissions to be carried out before declaring that remote end is not available. The default value of -1 (or any other negative value and 0) means to skip any overrides and leave it to OS default.
   * - ``[oslo_messaging_zmq] zmq_tcp_keepalive_idle = -1``
     - (IntOpt) The duration between two keepalive transmissions in idle condition. The unit is platform dependent, for example, seconds in Linux, milliseconds in Windows etc. The default value of -1 (or any other negative value and 0) means to skip any overrides and leave it to OS default.
   * - ``[oslo_messaging_zmq] zmq_tcp_keepalive_intvl = -1``
     - (IntOpt) The duration between two successive keepalive retransmissions, if acknowledgement to the previous keepalive transmission is not received. The unit is platform dependent, for example, seconds in Linux, milliseconds in Windows etc. The default value of -1 (or any other negative value and 0) means to skip any overrides and leave it to OS default.
   * - ``[profiler] connection_string = messaging://``
     - (StrOpt) Connection string for a notifier backend. Default value is messaging:// which sets the notifier to oslo_messaging. Examples of possible values: * messaging://: use oslo_messaging driver for sending notifications. * mongodb://127.0.0.1:27017 : use mongodb driver for sending notifications. * elasticsearch://127.0.0.1:9200 : use elasticsearch driver for sending notifications.
   * - ``[profiler] enabled = False``
     - (BoolOpt) Enables the profiling for all services on this node. Default value is False (fully disable the profiling feature). Possible values: * True: Enables the feature * False: Disables the feature. The profiling cannot be started via this project operations. If the profiling is triggered by another project, this project part will be empty.
   * - ``[profiler] es_doc_type = notification``
     - (StrOpt) Document type for notification indexing in elasticsearch.
   * - ``[profiler] es_scroll_size = 10000``
     - (IntOpt) Elasticsearch splits large requests in batches. This parameter defines maximum size of each batch (for example: es_scroll_size=10000).
   * - ``[profiler] es_scroll_time = 2m``
     - (StrOpt) This parameter is a time value parameter (for example: es_scroll_time=2m), indicating for how long the nodes that participate in the search will maintain relevant resources in order to continue and support it.
   * - ``[profiler] hmac_keys = SECRET_KEY``
     - (StrOpt) Secret key(s) to use for encrypting context data for performance profiling. This string value should have the following format: <key1>[,<key2>,...<keyn>], where each key is some random string. A user who triggers the profiling via the REST API has to set one of these keys in the headers of the REST API call to include profiling results of this node for this particular project. Both "enabled" flag and "hmac_keys" config options should be set to enable profiling. Also, to generate correct profiling information across all services at least one key needs to be consistent between OpenStack projects. This ensures it can be used from client side to generate the trace, containing information from all possible resources.
   * - ``[profiler] sentinel_service_name = mymaster``
     - (StrOpt) Redissentinel uses a service name to identify a master redis service. This parameter defines the name (for example: sentinal_service_name=mymaster).
   * - ``[profiler] socket_timeout = 0.1``
     - (FloatOpt) Redissentinel provides a timeout option on the connections. This parameter defines that timeout (for example: socket_timeout=0.1).
   * - ``[profiler] trace_management_store = False``
     - (BoolOpt) If False doesn't trace any management store requests.
   * - ``[profiler] trace_message_store = False``
     - (BoolOpt) If False doesn't trace any message store requests.
   * - ``[profiler] trace_sqlalchemy = False``
     - (BoolOpt) Enables SQL requests profiling in services. Default value is False (SQL requests won't be traced). Possible values: * True: Enables SQL requests profiling. Each SQL query will be part of the trace and can the be analyzed by how much time was spent for that. * False: Disables SQL requests profiling. The spent time is only shown on a higher level of operations. Single SQL queries cannot be analyzed this way.
   * - ``[profiler] trace_wsgi_transport = False``
     - (BoolOpt) If False doesn't trace any transport requests.Please note that it doesn't work for websocket now.
   * - ``[transport] max_flavors_per_page = 20``
     - (IntOpt) Defines the maximum number of flavors per page.
   * - ``[transport] max_pools_per_page = 20``
     - (IntOpt) Defines the maximum number of pools per page.


.. list-table:: Deprecated options
   :header-rows: 1
   :class: config-ref-table

   * - Deprecated option
     - New Option
   * - ``[DEFAULT] use_syslog``
     - ``None``

