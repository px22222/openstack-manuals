..
    Warning: Do not edit this file. It is automatically generated from the
    software project's code and your changes will be overwritten.

    The tool to generate this file lives in openstack-doc-tools repository.

    Please make any changes needed in the code, then run the
    autogenerate-config-doc tool from the openstack-doc-tools repository, or
    ask for help on the documentation mailing list, IRC channel or meeting.

.. _nova-DEFAULT:

.. list-table:: Description of DEFAULT configuration options
   :header-rows: 1
   :class: config-ref-table

   * - Configuration option = Default value
     - Description

   * - ``bandwidth_poll_interval`` = ``600``

     - (Integer) Interval to pull network bandwidth usage info.

       Not supported on all hypervisors. If a hypervisor doesn't support bandwidth usage, it will not get the info in the usage events.

       Possible values:

       * 0: Will run at the default periodic interval.

       * Any value < 0: Disables the option.

       * Any positive integer in seconds.

   * - ``default_floating_pool`` = ``nova``

     - (String) Default pool for floating IPs.

       This option specifies the default floating IP pool for allocating floating IPs.

       While allocating a floating ip, users can optionally pass in the name of the pool they want to allocate from, otherwise it will be pulled from the default pool.

       If this option is not set, then 'nova' is used as default floating pool.

       Possible values:

       * Any string representing a floating IP pool name

   * - ``compute_topic`` = ``compute``

     - (String) This is the message queue topic that the compute service 'listens' on. It is used when the compute service is started up to configure the queue, and whenever an RPC call to the compute service is made.

       Possible values:

       * Any string, but there is almost never any reason to ever change this value from its default of 'compute'.

       - **Deprecated**

         There is no need to let users choose the RPC topic for all services - there is little gain from this. Furthermore, it makes it really easy to break Nova by using this option.

   * - ``remove_unused_base_images`` = ``True``

     - (Boolean) Should unused base images be removed?

   * - ``live_migration_retry_count`` = ``30``

     - (Integer) Maximum number of 1 second retries in live_migration. It specifies number of retries to iptables when it complains. It happens when an user continuously sends live-migration request to same host leading to concurrent request to iptables.

       Possible values:

       * Any positive integer representing retry count.

   * - ``flat_interface`` = ``None``

     - (String) This option is the name of the virtual interface of the VM on which the bridge will be built. While it was originally designed to be used only by nova-network, it is also used by libvirt for the bridge interface name.

       Possible values:

        Any valid virtual interface name, such as 'eth0'

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``osapi_compute_listen_port`` = ``8774``

     - (Port number) Port on which the OpenStack API will listen.

       The OpenStack API service listens on this port number for incoming requests.

   * - ``ldap_dns_soa_expiry`` = ``86400``

     - (Integer) Expiry interval (in seconds) for LDAP DNS driver Start of Authority

       Time interval, a secondary/slave DNS server holds the information before it is no longer considered authoritative.

   * - ``block_device_allocate_retries`` = ``60``

     - (Integer) Number of times to retry block device allocation on failures. Starting with Liberty, Cinder can use image volume cache. This may help with block device allocation performance. Look at the cinder image_volume_cache_enabled configuration option.

       Possible values:

       * 60 (default)

       * If value is 0, then one attempt is made.

       * Any negative value is treated as 0.

       * For any value > 0, total attempts are (value + 1)

   * - ``shutdown_timeout`` = ``60``

     - (Integer) Total time to wait in seconds for an instance toperform a clean shutdown.

       It determines the overall period (in seconds) a VM is allowed to perform a clean shutdown. While performing stop, rescue and shelve, rebuild operations, configuring this option gives the VM a chance to perform a controlled shutdown before the instance is powered off. The default timeout is 60 seconds.

       The timeout value can be overridden on a per image basis by means of os_shutdown_timeout that is an image metadata setting allowing different types of operating systems to specify how much time they need to shut down cleanly.

       Possible values:

       * Any positive integer in seconds (default value is 60).

   * - ``sync_power_state_pool_size`` = ``1000``

     - (Integer) Number of greenthreads available for use to sync power states.

       This option can be used to reduce the number of concurrent requests made to the hypervisor or system with real instance power states for performance reasons, for example, with Ironic.

       Possible values:

       * Any positive integer representing greenthreads count.

   * - ``teardown_unused_network_gateway`` = ``False``

     - (Boolean) Determines whether unused gateway devices, both VLAN and bridge, are deleted if the network is in nova-network VLAN mode and is multi-hosted.

       Related options:

        ``use_neutron``, ``vpn_ip``, ``fake_network``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``osapi_compute_listen`` = ``0.0.0.0``

     - (String) IP address on which the OpenStack API will listen.

       The OpenStack API service listens on this IP address for incoming requests.

   * - ``public_interface`` = ``eth0``

     - (String) This is the name of the network interface for public IP addresses. The default is 'eth0'.

       Possible values:

        Any string representing a network interface name

   * - ``verbose`` = ``True``

     - (Boolean) If set to false, the logging level will be set to WARNING instead of the default INFO level.

       - **Deprecated**

         No deprecation reason provided for this option.

   * - ``ldap_dns_password`` = ``password``

     - (String) Bind user's password for LDAP server

   * - ``network_size`` = ``256``

     - (Integer) This option determines the number of addresses in each private subnet.

       Please note that this option is only used when using nova-network instead of Neutron in your deployment.

       Possible values:

        Any positive integer that is less than or equal to the available network size. Note that if you are creating multiple networks, they must all fit in the available IP address space. The default is 256.

       Related options:

        ``use_neutron``, ``num_networks``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``virt_mkfs`` = ``[]``

     - (Multi-valued) Name of the mkfs commands for ephemeral device.

       The format is <os_type>=<mkfs command>

   * - ``enable_new_services`` = ``True``

     - (Boolean) Enable new services on this host automatically.

       When a new service (for example "nova-compute") starts up, it gets registered in the database as an enabled service. Sometimes it can be useful to register new services in disabled state and then enabled them at a later point in time. This option can set this behavior for all services per host.

       Possible values:

       * ``True``: Each new service is enabled as soon as it registers itself.

       * ``False``: Services must be enabled via a REST API call or with the CLI with ``nova service-enable <hostname> <binary>``, otherwise they are not ready to use.

   * - ``my_ip`` = ``10.0.0.1``

     - (String) The IP address which the host is using to connect to the management network.

       Possible values:

       * String with valid IP address. Default is IPv4 address of this host.

       Related options:

       * metadata_host

       * my_block_storage_ip

       * routing_source_ip

       * vpn_ip

   * - ``ldap_dns_soa_hostmaster`` = ``hostmaster@example.org``

     - (String) Hostmaster for LDAP DNS driver Statement of Authority

       Possible values:

       * Any valid string representing LDAP DNS hostmaster.

   * - ``password_length`` = ``12``

     - (Integer) Length of generated instance admin passwords.

   * - ``reserved_huge_pages`` = ``None``

     - (Unknown) Number of huge/large memory pages to reserved per NUMA host cell.

       Possible values:

       * A list of valid key=value which reflect NUMA node ID, page size (Default unit is KiB) and number of pages to be reserved.

        reserved_huge_pages = node:0,size:2048,count:64 reserved_huge_pages = node:1,size:1GB,count:1

        In this example we are reserving on NUMA node 0 64 pages of 2MiB and on NUMA node 1 1 page of 1GiB.

   * - ``default_schedule_zone`` = ``None``

     - (String) Availability zone to use when user doesn't specify one.

       This option is used by the scheduler to determine which availability zone to place a new VM instance into if the user did not specify one at the time of VM boot request.

       Possible values:

       * Any string representing an availability zone name

       * Default value is None.

   * - ``use_neutron`` = ``True``

     - (Boolean) Whether to use Neutron or Nova Network as the back end for networking. Defaults to False (indicating Nova network).Set to True to use neutron.

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``quota_networks`` = ``3``

     - (Integer) This option controls the number of private networks that can be created per project (or per tenant).

       Related options:

       * enable_network_quota

       - **Deprecated**

         CRUD operations on tenant networks are only available when using nova-network and nova-network is itself deprecated.

   * - ``allow_resize_to_same_host`` = ``False``

     - (Boolean) Allow destination machine to match source for resize. Useful when testing in single-host environments. By default it is not allowed to resize to the same host. Setting this option to true will add the same host to the destination options.

   * - ``reclaim_instance_interval`` = ``0``

     - (Integer) Interval for reclaiming deleted instances.

       A value greater than 0 will enable SOFT_DELETE of instances. This option decides whether the server to be deleted will be put into the SOFT_DELETED state. If this value is greater than 0, the deleted server will not be deleted immediately, instead it will be put into a queue until it's too old (deleted time greater than the value of reclaim_instance_interval). The server can be recovered from the delete queue by using the restore action. If the deleted server remains longer than the value of reclaim_instance_interval, it will be deleted by a periodic task in the compute service automatically.

       Note that this option is read from both the API and compute nodes, and must be set globally otherwise servers could be put into a soft deleted state in the API and never actually reclaimed (deleted) on the compute node.

       Possible values:

       * Any positive integer(in seconds) greater than 0 will enable this option.

       * Any value <=0 will disable the option.

   * - ``rootwrap_config`` = ``/etc/nova/rootwrap.conf``

     - (String) Path to the rootwrap configuration file.

       Goal of the root wrapper is to allow a service-specific unprivileged user to run a number of actions as the root user in the safest manner possible. The configuration file used here must match the one defined in the sudoers entry.

   * - ``max_local_block_devices`` = ``3``

     - (Integer) Maximum number of devices that will result in a local image being created on the hypervisor node.

       A negative number means unlimited. Setting max_local_block_devices to 0 means that any request that attempts to create a local disk will fail. This option is meant to limit the number of local discs (so root local disc that is the result of --image being used, and any other ephemeral and swap disks). 0 does not mean that images will be automatically converted to volumes and boot instances from volumes - it just means that all requests that attempt to create a local disk will fail.

       Possible values:

       * 0: Creating a local disk is not allowed.

       * Negative number: Allows unlimited number of local discs.

       * Positive number: Allows only these many number of local discs. (Default value is 3).

   * - ``metadata_listen`` = ``0.0.0.0``

     - (String) IP address on which the metadata API will listen.

       The metadata API service listens on this IP address for incoming requests.

   * - ``syslog_log_facility`` = ``LOG_USER``

     - (String) Syslog facility to receive log lines. This option is ignored if log_config_append is set.

   * - ``force_config_drive`` = ``False``

     - (Boolean) Force injection to take place on a config drive

       When this option is set to true configuration drive functionality will be forced enabled by default, otherwise user can still enable configuration drives via the REST API or image metadata properties.

       Possible values:

       * True: Force to use of configuration drive regardless the user's input in the REST API call.

       * False: Do not force use of configuration drive. Config drives can still be enabled via the REST API or image metadata properties.

       Related options:

       * Use the 'mkisofs_cmd' flag to set the path where you install the genisoimage program. If genisoimage is in same path as the nova-compute service, you do not need to set this flag.

       * To use configuration drive with Hyper-V, you must set the 'mkisofs_cmd' value to the full path to an mkisofs.exe installation. Additionally, you must set the qemu_img_cmd value in the hyperv configuration section to the full path to an qemu-img command installation.

   * - ``fixed_range_v6`` = ``fd00::/48``

     - (String) This option determines the fixed IPv6 address block when creating a network.

       Please note that this option is only used when using nova-network instead of Neutron in your deployment.

       Possible values:

        Any valid IPv6 CIDR. The default value is "fd00::/48".

       Related options:

        ``use_neutron``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``dns_server`` = ``[]``

     - (Multi-valued) Despite the singular form of the name of this option, it is actually a list of zero or more server addresses that dnsmasq will use for DNS nameservers. If this is not empty, dnsmasq will not read /etc/resolv.conf, but will only use the servers specified in this option. If the option use_network_dns_servers is True, the dns1 and dns2 servers from the network will be appended to this list, and will be used as DNS servers, too.

       Possible values:

        A list of strings, where each string is either an IP address or a FQDN.

       Related options:

        use_network_dns_servers

   * - ``default_access_ip_network_name`` = ``None``

     - (String) Name of the network to be used to set access IPs for instances. If there are multiple IPs to choose from, an arbitrary one will be chosen.

       Possible values:

       * None (default)

       * Any string representing network name.

   * - ``resume_guests_state_on_host_boot`` = ``False``

     - (Boolean) This option specifies whether to start guests that were running before the host rebooted. It ensures that all of the instances on a Nova compute node resume their state each time the compute node boots or restarts.

   * - ``dhcp_lease_time`` = ``86400``

     - (Integer) The lifetime of a DHCP lease, in seconds. The default is 86400 (one day).

       Possible values:

        Any positive integer value.

   * - ``floating_ip_dns_manager`` = ``nova.network.noop_dns_driver.NoopDNSDriver``

     - (String) Full class name for the DNS Manager for floating IPs.

       This option specifies the class of the driver that provides functionality to manage DNS entries associated with floating IPs.

       When a user adds a DNS entry for a specified domain to a floating IP, nova will add a DNS entry using the specified floating DNS driver. When a floating IP is deallocated, its DNS entry will automatically be deleted.

       Possible values:

       * Full Python path to the class to be used

       Related options:

       * use_neutron: this options only works with nova-network.

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``injected_network_template`` = ``$pybasedir/nova/virt/interfaces.template``

     - (String) Path to '/etc/network/interfaces' template.

       The path to a template file for the '/etc/network/interfaces'-style file, which will be populated by nova and subsequently used by cloudinit. This provides a method to configure network connectivity in environments without a DHCP server.

       The template will be rendered using Jinja2 template engine, and receive a top-level key called ``interfaces``. This key will contain a list of dictionaries, one for each interface.

       Refer to the cloudinit documentaion for more information:

        https://cloudinit.readthedocs.io/en/latest/topics/datasources.html

       Possible values:

       * A path to a Jinja2-formatted template for a Debian '/etc/network/interfaces' file. This applies even if using a non Debian-derived guest.

       Related options:

       * ``flat_inject``: This must be set to ``True`` to ensure nova embeds network configuration information in the metadata provided through the config drive.

   * - ``daemon`` = ``False``

     - (Boolean) Run as a background process.

   * - ``rate_limit_except_level`` = ``CRITICAL``

     - (String) Log level name used by rate limiting: CRITICAL, ERROR, INFO, WARNING, DEBUG or empty string. Logs with level greater or equal to rate_limit_except_level are not filtered. An empty string means that all levels are filtered.

   * - ``send_arp_for_ha_count`` = ``3``

     - (Integer) When arp messages are configured to be sent, they will be sent with the count set to the value of this option. Of course, if this is set to zero, no arp messages will be sent.

       Possible values:

        Any integer greater than or equal to 0

       Related options:

        send_arp_for_ha

   * - ``heal_instance_info_cache_interval`` = ``60``

     - (Integer) Interval between instance network information cache updates.

       Number of seconds after which each compute node runs the task of querying Neutron for all of its instances networking information, then updates the Nova db with that information. Nova will never update it's cache if this option is set to 0. If we don't update the cache, the metadata service and nova-api endpoints will be proxying incorrect network data about the instance. So, it is not recommended to set this option to 0.

       Possible values:

       * Any positive integer in seconds.

       * Any value <=0 will disable the sync. This is not recommended.

   * - ``resize_confirm_window`` = ``0``

     - (Integer) Automatically confirm resizes after N seconds.

       Resize functionality will save the existing server before resizing. After the resize completes, user is requested to confirm the resize. The user has the opportunity to either confirm or revert all changes. Confirm resize removes the original server and changes server status from resized to active. Setting this option to a time period (in seconds) will automatically confirm the resize if the server is in resized state longer than that time.

       Possible values:

       * 0: Disables the option (default)

       * Any positive integer in seconds: Enables the option.

   * - ``metadata_host`` = ``$my_ip``

     - (String) This option determines the IP address for the network metadata API server.

       Possible values:

       * Any valid IP address. The default is the address of the Nova API server.

       Related options:

       * metadata_port

   * - ``debug`` = ``False``

     - (Boolean) If set to true, the logging level will be set to DEBUG instead of the default INFO level.

       - **Mutable**

         This option can be changed without restarting.

   * - ``logging_user_identity_format`` = ``%(user)s %(tenant)s %(domain)s %(user_domain)s %(project_domain)s``

     - (String) Defines the format string for %(user_identity)s that is used in logging_context_format_string.

   * - ``routing_source_ip`` = ``$my_ip``

     - (String) This is the public IP address of the network host. It is used when creating a SNAT rule.

       Possible values:

        Any valid IP address

       Related options:

        force_snat_range

   * - ``firewall_driver`` = ``None``

     - (String) Firewall driver to use with ``nova-network`` service.

       This option only applies when using the ``nova-network`` service. When using another networking services, such as Neutron, this should be to set to the ``nova.virt.firewall.NoopFirewallDriver``.

       If unset (the default), this will default to the hypervisor-specified default driver.

       Possible values:

       * nova.virt.firewall.IptablesFirewallDriver

       * nova.virt.firewall.NoopFirewallDriver

       * nova.virt.libvirt.firewall.IptablesFirewallDriver

       * [...]

       Related options:

       * ``use_neutron``: This must be set to ``False`` to enable ``nova-network`` networking

   * - ``ldap_dns_user`` = ``uid=admin,ou=people,dc=example,dc=org``

     - (String) Bind user for LDAP server

   * - ``config_drive_format`` = ``iso9660``

     - (String) Configuration drive format

       Configuration drive format that will contain metadata attached to the instance when it boots.

       Possible values:

       * iso9660: A file system image standard that is widely supported across operating systems. NOTE: Mind the libvirt bug (https://bugs.launchpad.net/nova/+bug/1246201) - If your hypervisor driver is libvirt, and you want live migrate to work without shared storage, then use VFAT.

       * vfat: For legacy reasons, you can configure the configuration drive to use VFAT format instead of ISO 9660.

       Related options:

       * This option is meaningful when one of the following alternatives occur: 1. force_config_drive option set to 'true' 2. the REST API call to create the instance contains an enable flag for config drive option 3. the image used to create the instance requires a config drive, this is defined by img_config_drive property for that image.

       * A compute node running Hyper-V hypervisor can be configured to attach configuration drive as a CD drive. To attach the configuration drive as a CD drive, set config_drive_cdrom option at hyperv section, to true.

   * - ``block_device_allocate_retries_interval`` = ``3``

     - (Integer) Interval (in seconds) between block device allocation retries on failures.

       This option allows the user to specify the time interval between consecutive retries. 'block_device_allocate_retries' option specifies the maximum number of retries.

       Possible values:

       * 0: Disables the option.

       * Any positive integer in seconds enables the option.

       Related options:

       * ``block_device_allocate_retries`` in compute_manager_opts group.

   * - ``shelved_offload_time`` = ``0``

     - (Integer) Time before a shelved instance is eligible for removal from a host.

       By default this option is set to 0 and the shelved instance will be removed from the hypervisor immediately after shelve operation. Otherwise, the instance will be kept for the value of shelved_offload_time(in seconds) so that during the time period the unshelve action will be faster, then the periodic task will remove the instance from hypervisor after shelved_offload_time passes.

       Possible values:

       * 0: Instance will be immediately offloaded after being shelved.

       * Any value < 0: An instance will never offload.

       * Any positive integer in seconds: The instance will exist for the specified number of seconds before being offloaded.

   * - ``state_path`` = ``$pybasedir``

     - (String) The top-level directory for maintaining Nova's state.

       This directory is used to store Nova's internal state. It is used by a variety of other config options which derive from this. In some scenarios (for example migrations) it makes sense to use a storage location which is shared between multiple compute hosts (for example via NFS). Unless the option ``instances_path`` gets overwritten, this directory can grow very large.

       Possible values:

       * The full path to a directory. Defaults to value provided in ``pybasedir``.

   * - ``pointer_model`` = ``usbtablet``

     - (String) Generic property to specify the pointer type.

       Input devices allow interaction with a graphical framebuffer. For example to provide a graphic tablet for absolute cursor movement.

       If set, the 'hw_pointer_model' image property takes precedence over this configuration option.

       Possible values:

       * None: Uses default behavior provided by drivers (mouse on PS2 for libvirt x86)

       * ps2mouse: Uses relative movement. Mouse connected by PS2

       * usbtablet: Uses absolute movement. Tablet connect by USB

       Related options:

       * usbtablet must be configured with VNC enabled or SPICE enabled and SPICE agent disabled. When used with libvirt the instance mode should be configured as HVM.

   * - ``ebtables_retry_interval`` = ``1.0``

     - (Floating point) This option determines the time, in seconds, that the system will sleep in between ebtables retries. Note that each successive retry waits a multiple of this value, so for example, if this is set to the default of 1.0 seconds, and ebtables_exec_attempts is 4, after the first failure, the system will sleep for 1 * 1.0 seconds, after the second failure it will sleep 2 * 1.0 seconds, and after the third failure it will sleep 3 * 1.0 seconds.

       Possible values:

       * Any non-negative float or integer. Setting this to zero will result in no waiting between attempts.

       Related options:

       * ebtables_exec_attempts

   * - ``disk_allocation_ratio`` = ``0.0``

     - (Floating point) This option helps you specify virtual disk to physical disk allocation ratio.

       From Ocata (15.0.0) this is used to influence the hosts selected by the Placement API. Note that when Placement is used, the DiskFilter is redundant, because the Placement API will have already filtered out hosts that would have failed the DiskFilter.

       A ratio greater than 1.0 will result in over-subscription of the available physical disk, which can be useful for more efficiently packing instances created with images that do not use the entire virtual disk, such as sparse or compressed images. It can be set to a value between 0.0 and 1.0 in order to preserve a percentage of the disk for uses other than instances.

       NOTE: This can be set per-compute, or if set to 0.0, the value set on the scheduler node(s) or compute node(s) will be used and defaulted to 1.0'.

       Possible values:

       * Any valid positive integer or float value

   * - ``vif_plugging_timeout`` = ``300``

     - (Integer) Timeout for Neutron VIF plugging event message arrival.

       Number of seconds to wait for Neutron vif plugging events to arrive before continuing or failing (see 'vif_plugging_is_fatal').

       Related options:

       * vif_plugging_is_fatal - If ``vif_plugging_timeout`` is set to zero and ``vif_plugging_is_fatal`` is False, events should not be expected to arrive at all.

   * - ``flat_network_dns`` = ``8.8.4.4``

     - (String) This is the address of the DNS server for a simple network. If this option is not specified, the default of '8.8.4.4' is used.

       Please note that this option is only used when using nova-network instead of Neutron in your deployment.

       Possible values:

        Any valid IP address.

       Related options:

        ``use_neutron``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``force_snat_range`` = ``[]``

     - (Multi-valued) This is a list of zero or more IP ranges that traffic from the `routing_source_ip` will be SNATted to. If the list is empty, then no SNAT rules are created.

       Possible values:

        A list of strings, each of which should be a valid CIDR.

       Related options:

        routing_source_ip

   * - ``default_ephemeral_format`` = ``None``

     - (String) The default format an ephemeral_volume will be formatted with on creation.

       Possible values:

       * ``ext2``

       * ``ext3``

       * ``ext4``

       * ``xfs``

       * ``ntfs`` (only for Windows guests)

   * - ``remove_unused_original_minimum_age_seconds`` = ``86400``

     - (Integer) Unused unresized base images younger than this will not be removed.

   * - ``ldap_dns_url`` = ``ldap://ldap.example.com:389``

     - (URI) URL for LDAP server which will store DNS entries

       Possible values:

       * A valid LDAP URL representing the server

   * - ``metadata_listen_port`` = ``8775``

     - (Port number) Port on which the metadata API will listen.

       The metadata API service listens on this port number for incoming requests.

   * - ``periodic_enable`` = ``True``

     - (Boolean) Enable periodic tasks.

       If set to true, this option allows services to periodically run tasks on the manager.

       In case of running multiple schedulers or conductors you may want to run periodic tasks on only one host - in this case disable this option for all hosts but one.

   * - ``iptables_drop_action`` = ``DROP``

     - (String) By default, packets that do not pass the firewall are DROPped. In many cases, though, an operator may find it more useful to change this from DROP to REJECT, so that the user issuing those packets may have a better idea as to what's going on, or LOGDROP in order to record the blocked traffic before DROPping.

       Possible values:

       * A string representing an iptables chain. The default is DROP.

   * - ``gateway`` = ``None``

     - (String) This is the default IPv4 gateway. It is used only in the testing suite.

       Please note that this option is only used when using nova-network instead of Neutron in your deployment.

       Possible values:

        Any valid IP address.

       Related options:

        ``use_neutron``, ``gateway_v6``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``instance_name_template`` = ``instance-%08x``

     - (String) Template string to be used to generate instance names.

       This template controls the creation of the database name of an instance. This is *not* the display name you enter when creating an instance (via Horizon or CLI). For a new deployment it is advisable to change the default value (which uses the database autoincrement) to another value which makes use of the attributes of an instance, like ``instance-%(uuid)s``. If you already have instances in your deployment when you change this, your deployment will break.

       Possible values:

       * A string which either uses the instance database ID (like the default)

       * A string with a list of named database columns, for example ``%(id)d`` or ``%(uuid)s`` or ``%(hostname)s``.

       Related options:

       * not to be confused with: ``multi_instance_display_name_template``

   * - ``web`` = ``/usr/share/spice-html5``

     - (String) Path to directory with content which will be served by a web server.

   * - ``use_stderr`` = ``False``

     - (Boolean) Log output to standard error. This option is ignored if log_config_append is set.

   * - ``instance_usage_audit_period`` = ``month``

     - (String) Time period to generate instance usages for. It is possible to define optional offset to given period by appending @ character followed by a number defining offset.

       Possible values:

       * period, example: ``hour``, ``day``, ``month` or ``year``

       * period with offset, example: ``month@15`` will result in monthly audits starting on 15th day of month.

   * - ``log_dir`` = ``None``

     - (String) (Optional) The base directory used for relative log_file paths. This option is ignored if log_config_append is set.

   * - ``logging_debug_format_suffix`` = ``%(funcName)s %(pathname)s:%(lineno)d``

     - (String) Additional data to append to log message when logging level for the message is DEBUG.

   * - ``ldap_dns_base_dn`` = ``ou=hosts,dc=example,dc=org``

     - (String) Base distinguished name for the LDAP search query

       This option helps to decide where to look up the host in LDAP.

   * - ``default_log_levels`` = ``amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, oslo.messaging=INFO, iso8601=WARN, requests.packages.urllib3.connectionpool=WARN, urllib3.connectionpool=WARN, websocket=WARN, requests.packages.urllib3.util.retry=WARN, urllib3.util.retry=WARN, keystonemiddleware=WARN, routes.middleware=WARN, stevedore=WARN, taskflow=WARN, keystoneauth=WARN, oslo.cache=INFO, dogpile.core.dogpile=INFO``

     - (List) List of package logging levels in logger=LEVEL pairs. This option is ignored if log_config_append is set.

   * - ``running_deleted_instance_poll_interval`` = ``1800``

     - (Integer) Time interval in seconds to wait between runs for the clean up action. If set to 0, above check will be disabled. If "running_deleted_instance _action" is set to "log" or "reap", a value greater than 0 must be set.

       Possible values:

       * Any positive integer in seconds enables the option.

       * 0: Disables the option.

       * 1800: Default value.

       Related options:

       * running_deleted_instance_action

   * - ``dhcp_domain`` = ``novalocal``

     - (String) This option allows you to specify the domain for the DHCP server.

       Possible values:

        Any string that is a valid domain name.

       Related options:

        ``use_neutron``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``forward_bridge_interface`` = ``['all']``

     - (Multi-valued) One or more interfaces that bridges can forward traffic to. If any of the items in this list is the special keyword 'all', then all traffic will be forwarded.

       Possible values:

        A list of zero or more interface names, or the word 'all'.

   * - ``console_topic`` = ``console``

     - (String) Represents the message queue topic name used by nova-console service when communicating via the AMQP server. The Nova API uses a message queue to communicate with nova-console to retrieve a console URL for that host.

       Possible values:

       * A string representing topic exchange name

       - **Deprecated**

         There is no need to let users choose the RPC topic for all services - there is little gain from this. Furthermore, it makes it really easy to break Nova by using this option.

   * - ``instances_path`` = ``$state_path/instances``

     - (String) Specifies where instances are stored on the hypervisor's disk. It can point to locally attached storage or a directory on NFS.

       Possible values:

       * $state_path/instances where state_path is a config option that specifies the top-level directory for maintaining nova's state. (default) or Any string representing directory path.

   * - ``flat_injected`` = ``False``

     - (Boolean) This option determines whether the network setup information is injected into the VM before it is booted. While it was originally designed to be used only by nova-network, it is also used by the vmware and xenapi virt drivers to control whether network information is injected into a VM.

   * - ``host`` = ``localhost``

     - (String) Hostname, FQDN or IP address of this host. Must be valid within AMQP key.

       Possible values:

       * String with hostname, FQDN or IP address. Default is hostname of this host.

   * - ``instance_delete_interval`` = ``300``

     - (Integer) Interval for retrying failed instance file deletes.

       This option depends on 'maximum_instance_delete_attempts'. This option specifies how often to retry deletes whereas 'maximum_instance_delete_attempts' specifies the maximum number of retry attempts that can be made.

       Possible values:

       * 0: Will run at the default periodic interval.

       * Any value < 0: Disables the option.

       * Any positive integer in seconds.

       Related options:

       * ``maximum_instance_delete_attempts`` from instance_cleaning_opts group.

   * - ``vpn_ip`` = ``$my_ip``

     - (String) This is the public IP address for the cloudpipe VPN servers. It defaults to the IP address of the host.

       Please note that this option is only used when using nova-network instead of Neutron in your deployment. It also will be ignored if the configuration option for `network_manager` is not set to the default of 'nova.network.manager.VlanManager'.

       Possible values:

        Any valid IP address. The default is $my_ip, the IP address of the VM.

       Related options:

        ``network_manager``, ``use_neutron``, ``vpn_start``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``non_inheritable_image_properties`` = ``cache_in_nova, bittorrent``

     - (List) Image properties that should not be inherited from the instance when taking a snapshot.

       This option gives an opportunity to select which image-properties should not be inherited by newly created snapshots.

       Possible values:

       * A list whose item is an image property. Usually only the image properties that are only needed by base images can be included here, since the snapshots that are created from the base images doesn't need them.

       * Default list: ['cache_in_nova', 'bittorrent']

   * - ``fixed_ip_disassociate_timeout`` = ``600``

     - (Integer) This is the number of seconds to wait before disassociating a deallocated fixed IP address. This is only used with the nova-network service, and has no effect when using neutron for networking.

       Possible values:

        Any integer, zero or greater. The default is 600 (10 minutes).

       Related options:

        ``use_neutron``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``running_deleted_instance_action`` = ``reap``

     - (String) The compute service periodically checks for instances that have been deleted in the database but remain running on the compute node. The above option enables action to be taken when such instances are identified.

       Possible values:

       * reap: Powers down the instances and deletes them(default)

       * log: Logs warning message about deletion of the resource

       * shutdown: Powers down instances and marks them as non- bootable which can be later used for debugging/analysis

       * noop: Takes no action

       Related options:

       * running_deleted_instance_poll

       * running_deleted_instance_timeout

   * - ``console_host`` = ``socket.gethostname()``

     - (String) Console proxy host to be used to connect to instances on this host. It is the publicly visible name for the console host.

       Possible values:

       * Current hostname (default) or any string representing hostname.

   * - ``preallocate_images`` = ``none``

     - (String) The image preallocation mode to use.

       Image preallocation allows storage for instance images to be allocated up front when the instance is initially provisioned. This ensures immediate feedback is given if enough space isn't available. In addition, it should significantly improve performance on writes to new blocks and may even improve I/O performance to prewritten blocks due to reduced fragmentation.

       Possible values:

       * "none" => no storage provisioning is done up front

       * "space" => storage is fully allocated at instance start

   * - ``reboot_timeout`` = ``0``

     - (Integer) Time interval after which an instance is hard rebooted automatically.

       When doing a soft reboot, it is possible that a guest kernel is completely hung in a way that causes the soft reboot task to not ever finish. Setting this option to a time period in seconds will automatically hard reboot an instance if it has been stuck in a rebooting state longer than N seconds.

       Possible values:

       * 0: Disables the option (default).

       * Any positive integer in seconds: Enables the option.

   * - ``multi_host`` = ``False``

     - (Boolean) Default value for multi_host in networks.

       nova-network service can operate in a multi-host or single-host mode. In multi-host mode each compute node runs a copy of nova-network and the instances on that compute node use the compute node as a gateway to the Internet. Where as in single-host mode, a central server runs the nova-network service. All compute nodes forward traffic from the instances to the cloud controller which then forwards traffic to the Internet.

       If this options is set to true, some rpc network calls will be sent directly to host.

       Note that this option is only used when using nova-network instead of Neutron in your deployment.

       Related options:

       * use_neutron

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``fake_network`` = ``False``

     - (Boolean) This option is used mainly in testing to avoid calls to the underlying network utilities.

   * - ``vpn_start`` = ``1000``

     - (Port number) This is the port number to use as the first VPN port for private networks.

       Please note that this option is only used when using nova-network instead of Neutron in your deployment. It also will be ignored if the configuration option for `network_manager` is not set to the default of 'nova.network.manager.VlanManager', or if you specify a value the 'vpn_start' parameter when creating a network.

       Possible values:

        Any integer representing a valid port number. The default is 1000.

       Related options:

        ``use_neutron``, ``vpn_ip``, ``network_manager``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``networks_path`` = ``$state_path/networks``

     - (String) The location where the network configuration files will be kept. The default is the 'networks' directory off of the location where nova's Python module is installed.

       Possible values

        A string containing the full path to the desired configuration directory

   * - ``rate_limit_burst`` = ``0``

     - (Integer) Maximum number of logged messages per rate_limit_interval.

   * - ``dmz_cidr`` =

     - (List) This option is a list of zero or more IP address ranges in your network's DMZ that should be accepted.

       Possible values:

        A list of strings, each of which should be a valid CIDR.

   * - ``instance_dns_domain`` =

     - (String) If specified, Nova checks if the availability_zone of every instance matches what the database says the availability_zone should be for the specified dns_domain.

       Related options:

       * use_neutron: this options only works with nova-network.

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``migrate_max_retries`` = ``-1``

     - (Integer) Number of times to retry live-migration before failing.

       Possible values:

       * If == -1, try until out of hosts (default)

       * If == 0, only try once, no retries

       * Integer greater than 0

   * - ``servicegroup_driver`` = ``db``

     - (String) This option specifies the driver to be used for the servicegroup service.

       ServiceGroup API in nova enables checking status of a compute node. When a compute worker running the nova-compute daemon starts, it calls the join API to join the compute group. Services like nova scheduler can query the ServiceGroup API to check if a node is alive. Internally, the ServiceGroup client driver automatically updates the compute worker status. There are multiple backend implementations for this service: Database ServiceGroup driver and Memcache ServiceGroup driver.

       Possible Values:

       * db : Database ServiceGroup driver

       * mc : Memcache ServiceGroup driver

       Related Options:

       * service_down_time (maximum time since last check-in for up service)

   * - ``shelved_poll_interval`` = ``3600``

     - (Integer) Interval for polling shelved instances to offload.

       The periodic task runs for every shelved_poll_interval number of seconds and checks if there are any shelved instances. If it finds a shelved instance, based on the 'shelved_offload_time' config value it offloads the shelved instances. Check 'shelved_offload_time' config option description for details.

       Possible values:

       * Any value <= 0: Disables the option.

       * Any positive integer in seconds.

       Related options:

       * ``shelved_offload_time``

   * - ``compute_monitors`` =

     - (List) A list of monitors that can be used for getting compute metrics. You can use the alias/name from the setuptools entry points for nova.compute.monitors.* namespaces. If no namespace is supplied, the "cpu." namespace is assumed for backwards-compatibility.

       Possible values:

       * An empty list will disable the feature(Default).

       * An example value that would enable both the CPU and NUMA memory bandwidth monitors that used the virt driver variant: ["cpu.virt_driver", "numa_mem_bw.virt_driver"]

   * - ``ssl_only`` = ``False``

     - (Boolean) Disallow non-encrypted connections.

   * - ``ram_allocation_ratio`` = ``0.0``

     - (Floating point) This option helps you specify virtual RAM to physical RAM allocation ratio.

       From Ocata (15.0.0) this is used to influence the hosts selected by the Placement API. Note that when Placement is used, the RamFilter is redundant, because the Placement API will have already filtered out hosts that would have failed the RamFilter.

       This configuration specifies ratio for RamFilter which can be set per compute node. For AggregateRamFilter, it will fall back to this configuration value if no per-aggregate setting found.

       NOTE: This can be set per-compute, or if set to 0.0, the value set on the scheduler node(s) or compute node(s) will be used and defaulted to 1.5.

       Possible values:

       * Any valid positive integer or float value

   * - ``resize_fs_using_block_device`` = ``False``

     - (Boolean) Enable resizing of filesystems via a block device.

       If enabled, attempt to resize the filesystem by accessing the image over a block device. This is done by the host and may not be necessary if the image contains a recent version of cloud-init. Possible mechanisms require the nbd driver (for qcow and raw), or loop (for raw).

   * - ``key`` = ``None``

     - (String) SSL key file (if separate from cert).

   * - ``vlan_interface`` = ``None``

     - (String) This option is the name of the virtual interface of the VM on which the VLAN bridge will be built. While it was originally designed to be used only by nova-network, it is also used by libvirt and xenapi for the bridge interface name.

       Please note that this setting will be ignored in nova-network if the configuration option for `network_manager` is not set to the default of 'nova.network.manager.VlanManager'.

       Possible values:

        Any valid virtual interface name, such as 'eth0'

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options. While this option has an effect when using neutron, it incorrectly override the value provided by neutron and should therefore not be used.

   * - ``linuxnet_ovs_integration_bridge`` = ``br-int``

     - (String) The name of the Open vSwitch bridge that is used with linuxnet when connecting with Open vSwitch."

       Possible values:

        Any string representing a valid bridge name.

   * - ``scheduler_topic`` = ``scheduler``

     - (String) Scheduler message queue topic.

       This is the message queue topic that the scheduler 'listens' on. It is used when the scheduler service is started up to configure the queue, and whenever an RPC call to the scheduler is made. There is almost never any reason to ever change this value.

       Possible values:

       * A valid AMQP topic name

       - **Deprecated**

         There is no need to let users choose the RPC topic for all services - there is little gain from this. Furthermore, it makes it really easy to break Nova by using this option.

   * - ``send_arp_for_ha`` = ``False``

     - (Boolean) When True, when a device starts up, and upon binding floating IP addresses, arp messages will be sent to ensure that the arp caches on the compute hosts are up-to-date.

       Related options:

        send_arp_for_ha_count

   * - ``network_allocate_retries`` = ``0``

     - (Integer) Number of times to retry network allocation. It is required to attempt network allocation retries if the virtual interface plug fails.

       Possible values:

       * Any positive integer representing retry count.

   * - ``use_rootwrap_daemon`` = ``False``

     - (Boolean) Start and use a daemon that can run the commands that need to be run with root privileges. This option is usually enabled on nodes that run nova compute processes.

   * - ``periodic_fuzzy_delay`` = ``60``

     - (Integer) Number of seconds to randomly delay when starting the periodic task scheduler to reduce stampeding.

       When compute workers are restarted in unison across a cluster, they all end up running the periodic tasks at the same time causing problems for the external services. To mitigate this behavior, periodic_fuzzy_delay option allows you to introduce a random initial delay when starting the periodic task scheduler.

       Possible Values:

       * Any positive integer (in seconds)

       * 0 : disable the random delay

   * - ``metadata_workers`` = ``None``

     - (Integer) Number of workers for metadata service. If not specified the number of available CPUs will be used.

       The metadata service can be configured to run as multi-process (workers). This overcomes the problem of reduction in throughput when API request concurrency increases. The metadata service will run in the specified number of processes.

       Possible Values:

       * Any positive integer

       * None (default value)

   * - ``dnsmasq_config_file`` =

     - (String) The path to the custom dnsmasq configuration file, if any.

       Possible values:

        The full path to the configuration file, or an empty string if there is no custom dnsmasq configuration file.

   * - ``ebtables_exec_attempts`` = ``3``

     - (Integer) This option determines the number of times to retry ebtables commands before giving up. The minimum number of retries is 1.

       Possible values:

       * Any positive integer

       Related options:

       * ebtables_retry_interval

   * - ``null_kernel`` = ``nokernel``

     - (String) This option is used to decide when an image should have no external ramdisk or kernel. By default this is set to 'nokernel', so when an image is booted with the property 'kernel_id' with the value 'nokernel', Nova assumes the image doesn't require an external kernel and ramdisk.

       - **Deprecated**

         When an image is booted with the property 'kernel_id' with the value 'nokernel', Nova assumes the image doesn't require an external kernel and ramdisk. This option allows user to change the API behaviour which should not be allowed and this value "nokernel" should be hard coded.

   * - ``mkisofs_cmd`` = ``genisoimage``

     - (String) Name or path of the tool used for ISO image creation

       Use the mkisofs_cmd flag to set the path where you install the genisoimage program. If genisoimage is on the system path, you do not need to change the default value.

       To use configuration drive with Hyper-V, you must set the mkisofs_cmd value to the full path to an mkisofs.exe installation. Additionally, you must set the qemu_img_cmd value in the hyperv configuration section to the full path to an qemu-img command installation.

       Possible values:

       * Name of the ISO image creator program, in case it is in the same directory as the nova-compute service

       * Path to ISO image creator program

       Related options:

       * This option is meaningful when config drives are enabled.

       * To use configuration drive with Hyper-V, you must set the qemu_img_cmd value in the hyperv configuration section to the full path to an qemu-img command installation.

   * - ``force_raw_images`` = ``True``

     - (Boolean) Force conversion of backing images to raw format.

       Possible values:

       * True: Backing image files will be converted to raw image format

       * False: Backing image files will not be converted

       Related options:

       * ``compute_driver``: Only the libvirt driver uses this option.

   * - ``cert`` = ``self.pem``

     - (String) Path to SSL certificate file.

   * - ``instance_format`` = ``"[instance: %(uuid)s] "``

     - (String) The format for an instance that is passed with the log message.

   * - ``source_is_ipv6`` = ``False``

     - (Boolean) Set to True if source host is addressed with IPv6.

   * - ``service_down_time`` = ``60``

     - (Integer) Maximum time in seconds since last check-in for up service

       Each compute node periodically updates their database status based on the specified report interval. If the compute node hasn't updated the status for more than service_down_time, then the compute node is considered down.

       Related Options:

       * report_interval (service_down_time should not be less than report_interval)

   * - ``defer_iptables_apply`` = ``False``

     - (Boolean) Whether to batch up the application of IPTables rules during a host restart and apply all at the end of the init phase.

   * - ``publish_errors`` = ``False``

     - (Boolean) Enables or disables publication of error events.

   * - ``consoleauth_topic`` = ``consoleauth``

     - (String) This option allows you to change the message topic used by nova-consoleauth service when communicating via the AMQP server. Nova Console Authentication server authenticates nova consoles. Users can then access their instances through VNC clients. The Nova API service uses a message queue to communicate with nova-consoleauth to get a VNC console.

       Possible Values:

       * 'consoleauth' (default) or Any string representing topic exchange name.

       - **Deprecated**

         There is no need to let users choose the RPC topic for all services - there is little gain from this. Furthermore, it makes it really easy to break Nova by using this option.

   * - ``update_resources_interval`` = ``0``

     - (Integer) Interval for updating compute resources.

       This option specifies how often the update_available_resources periodic task should run. A number less than 0 means to disable the task completely. Leaving this at the default of 0 will cause this to run at the default periodic interval. Setting it to any positive value will cause it to run at approximately that number of seconds.

       Possible values:

       * 0: Will run at the default periodic interval.

       * Any value < 0: Disables the option.

       * Any positive integer in seconds.

   * - ``logging_exception_prefix`` = ``%(asctime)s.%(msecs)03d %(process)d ERROR %(name)s %(instance)s``

     - (String) Prefix each line of exception output with this format.

   * - ``enabled_apis`` = ``osapi_compute, metadata``

     - (List) List of APIs to be enabled by default.

   * - ``report_interval`` = ``10``

     - (Integer) Number of seconds indicating how frequently the state of services on a given hypervisor is reported. Nova needs to know this to determine the overall health of the deployment.

       Related Options:

       * service_down_time report_interval should be less than service_down_time. If service_down_time is less than report_interval, services will routinely be considered down, because they report in too rarely.

   * - ``monkey_patch_modules`` = ``nova.compute.api:nova.notifications.notify_decorator``

     - (List) List of modules/decorators to monkey patch.

       This option allows you to patch a decorator for all functions in specified modules.

       Possible values:

       * nova.compute.api:nova.notifications.notify_decorator

       * nova.api.ec2.cloud:nova.notifications.notify_decorator

       * [...]

       Related options:

       * ``monkey_patch``: This must be set to ``True`` for this option to have any effect

   * - ``vif_plugging_is_fatal`` = ``True``

     - (Boolean) Determine if instance should boot or fail on VIF plugging timeout.

       Nova sends a port update to Neutron after an instance has been scheduled, providing Neutron with the necessary information to finish setup of the port. Once completed, Neutron notifies Nova that it has finished setting up the port, at which point Nova resumes the boot of the instance since network connectivity is now supposed to be present. A timeout will occur if the reply is not received after a given interval.

       This option determines what Nova does when the VIF plugging timeout event happens. When enabled, the instance will error out. When disabled, the instance will continue to boot on the assumption that the port is ready.

       Possible values:

       * True: Instances should fail after VIF plugging timeout

       * False: Instances should continue booting after VIF plugging timeout

   * - ``iptables_bottom_regex`` =

     - (String) This expression, if defined, will select any matching iptables rules and place them at the bottom when applying metadata changes to the rules.

       Possible values:

       * Any string representing a valid regular expression, or an empty string

       Related options:

       * iptables_top_regex

   * - ``update_dns_entries`` = ``False``

     - (Boolean) When this option is True, whenever a DNS entry must be updated, a fanout cast message is sent to all network hosts to update their DNS entries in multi-host mode.

       Related options:

        ``use_neutron``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``vendordata_driver`` = ``nova.api.metadata.vendordata_json.JsonFileVendorData``

     - (String) When returning instance metadata, this is the class that is used for getting vendor metadata when that class isn't specified in the individual request. The value should be the full dot-separated path to the class to use.

       Possible values:

       * Any valid dot-separated class path that can be imported.

       - **Deprecated**

         No deprecation reason provided for this option.

   * - ``instance_usage_audit`` = ``False``

     - (Boolean) This option enables periodic compute.instance.exists notifications. Each compute node must be configured to generate system usage data. These notifications are consumed by OpenStack Telemetry service.

   * - ``maximum_instance_delete_attempts`` = ``5``

     - (Integer) The number of times to attempt to reap an instance's files.

       This option specifies the maximum number of retry attempts that can be made.

       Possible values:

       * Any positive integer defines how many attempts are made.

       * Any value <=0 means no delete attempts occur, but you should use ``instance_delete_interval`` to disable the delete attempts.

       Related options:

       * ``instance_delete_interval`` in interval_opts group can be used to disable this option.

   * - ``console_driver`` = ``nova.console.xvp.XVPConsoleProxy``

     - (String) nova-console-proxy is used to set up multi-tenant VM console access. This option allows pluggable driver program for the console session and represents driver to use for the console proxy.

       Possible values:

       * A string representing fully classified class name of console driver.

       - **Deprecated**

         This option no longer does anything. Previously this option had only two valid, in-tree values: nova.console.xvp.XVPConsoleProxy and nova.console.fake.FakeConsoleProxy. The latter of these was only used in tests and has since been replaced.

   * - ``auto_assign_floating_ip`` = ``False``

     - (Boolean) Autoassigning floating IP to VM

       When set to True, floating IP is auto allocated and associated to the VM upon creation.

       Related options:

       * use_neutron: this options only works with nova-network.

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``allow_same_net_traffic`` = ``True``

     - (Boolean) Determine whether to allow network traffic from same network.

       When set to true, hosts on the same subnet are not filtered and are allowed to pass all types of traffic between them. On a flat network, this allows all instances from all projects unfiltered communication. With VLAN networking, this allows access between instances within the same project.

       This option only applies when using the ``nova-network`` service. When using another networking services, such as Neutron, security groups or other approaches should be used.

       Possible values:

       * True: Network traffic should be allowed pass between all instances on the same network, regardless of their tenant and security policies

       * False: Network traffic should not be allowed pass between instances unless it is unblocked in a security group

       Related options:

       * ``use_neutron``: This must be set to ``False`` to enable ``nova-network`` networking

       * ``firewall_driver``: This must be set to ``nova.virt.libvirt.firewall.IptablesFirewallDriver`` to ensure the libvirt firewall driver is enabled.

   * - ``watch_log_file`` = ``False``

     - (Boolean) Uses logging handler designed to watch file system. When log file is moved or removed this handler will open a new log file with specified path instantaneously. It makes sense only if log_file option is specified and Linux platform is used. This option is ignored if log_config_append is set.

   * - ``l3_lib`` = ``nova.network.l3.LinuxNetL3``

     - (String) This option allows you to specify the L3 management library to be used.

       Possible values:

        Any dot-separated string that represents the import path to an L3 networking library.

       Related options:

        ``use_neutron``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``instance_dns_manager`` = ``nova.network.noop_dns_driver.NoopDNSDriver``

     - (String) Full class name for the DNS Manager for instance IPs.

       This option specifies the class of the driver that provides functionality to manage DNS entries for instances.

       On instance creation, nova will add DNS entries for the instance name and id, using the specified instance DNS driver and domain. On instance deletion, nova will remove the DNS entries.

       Possible values:

       * Full Python path to the class to be used

       Related options:

       * use_neutron: this options only works with nova-network.

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``enable_network_quota`` = ``False``

     - (Boolean) This option is used to enable or disable quota checking for tenant networks.

       Related options:

       * quota_networks

       - **Deprecated**

         CRUD operations on tenant networks are only available when using nova-network and nova-network is itself deprecated.

   * - ``volume_usage_poll_interval`` = ``0``

     - (Integer) Interval for gathering volume usages.

       This option updates the volume usage cache for every volume_usage_poll_interval number of seconds.

       Possible values:

       * Any positive integer(in seconds) greater than 0 will enable this option.

       * Any value <=0 will disable the option.

   * - ``record`` = ``None``

     - (String) Filename that will be used for storing websocket frames received and sent by a proxy service (like VNC, spice, serial) running on this host. If this is not set, no recording will be done.

   * - ``reserved_host_disk_mb`` = ``0``

     - (Integer) Amount of disk resources in MB to make them always available to host. The disk usage gets reported back to the scheduler from nova-compute running on the compute nodes. To prevent the disk resources from being considered as available, this option can be used to reserve disk space for that host.

       Possible values:

       * Any positive integer representing amount of disk in MB to reserve for the host.

   * - ``use_ipv6`` = ``False``

     - (Boolean) Assign IPv6 and IPv4 addresses when creating instances.

       Related options:

       * use_neutron: this only works with nova-network.

   * - ``image_cache_subdirectory_name`` = ``_base``

     - (String) Location of cached images.

       This is NOT the full path - just a folder name relative to '$instances_path'. For per-compute-host cached images, set to '_base_$my_ip'

   * - ``image_cache_manager_interval`` = ``2400``

     - (Integer) Number of seconds to wait between runs of the image cache manager.

       Possible values:

       * 0: run at the default rate.

       * -1: disable

       * Any other value

   * - ``my_block_storage_ip`` = ``$my_ip``

     - (String) The IP address which is used to connect to the block storage network.

       Possible values:

       * String with valid IP address. Default is IP address of this host.

       Related options:

       * my_ip - if my_block_storage_ip is not set, then my_ip value is used.

   * - ``metadata_port`` = ``8775``

     - (Port number) This option determines the port used for the metadata API server.

       Related options:

       * metadata_host

   * - ``dns_update_periodic_interval`` = ``-1``

     - (Integer) This option determines the time, in seconds, to wait between refreshing DNS entries for the network.

       Possible values:

        Either -1 (default), or any positive integer. A negative value will disable the updates.

       Related options:

        ``use_neutron``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``force_dhcp_release`` = ``True``

     - (Boolean) When this option is True, a call is made to release the DHCP for the instance when that instance is terminated.

       Related options:

        ``use_neutron``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``dhcpbridge_flagfile`` = ``['/etc/nova/nova-dhcpbridge.conf']``

     - (Multi-valued) This option is a list of full paths to one or more configuration files for dhcpbridge. In most cases the default path of '/etc/nova/nova-dhcpbridge.conf' should be sufficient, but if you have special needs for configuring dhcpbridge, you can change or add to this list.

       Possible values

        A list of strings, where each string is the full path to a dhcpbridge configuration file.

   * - ``use_cow_images`` = ``True``

     - (Boolean) Enable use of copy-on-write (cow) images.

       QEMU/KVM allow the use of qcow2 as backing files. By disabling this, backing files will not be used.

   * - ``dhcpbridge`` = ``$bindir/nova-dhcpbridge``

     - (String) The location of the binary nova-dhcpbridge. By default it is the binary named 'nova-dhcpbridge' that is installed with all the other nova binaries.

       Possible values:

        Any string representing the full path to the binary for dhcpbridge

   * - ``num_networks`` = ``1``

     - (Integer) This option represents the number of networks to create if not explicitly specified when the network is created. The only time this is used is if a CIDR is specified, but an explicit network_size is not. In that case, the subnets are created by diving the IP address space of the CIDR by num_networks. The resulting subnet sizes cannot be larger than the configuration option `network_size`; in that event, they are reduced to `network_size`, and a warning is logged.

       Please note that this option is only used when using nova-network instead of Neutron in your deployment.

       Possible values:

        Any positive integer is technically valid, although there are practical limits based upon available IP address space and virtual interfaces. The default is 1.

       Related options:

        ``use_neutron``, ``network_size``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``running_deleted_instance_timeout`` = ``0``

     - (Integer) Time interval in seconds to wait for the instances that have been marked as deleted in database to be eligible for cleanup.

       Possible values:

       * Any positive integer in seconds(default is 0).

       Related options:

       * "running_deleted_instance_action"

   * - ``ldap_dns_soa_retry`` = ``3600``

     - (Integer) Retry interval (in seconds) for LDAP DNS driver Start of Authority

       Time interval, a secondary/slave DNS server should wait, if an attempt to transfer zone failed during the previous refresh interval.

   * - ``network_manager`` = ``nova.network.manager.VlanManager``

     - (String) Full class name for the Manager for network

   * - ``reserved_host_memory_mb`` = ``512``

     - (Integer) Amount of memory in MB to reserve for the host so that it is always available to host processes. The host resources usage is reported back to the scheduler continuously from nova-compute running on the compute node. To prevent the host memory from being considered as available, this option is used to reserve memory for the host.

       Possible values:

       * Any positive integer representing amount of memory in MB to reserve for the host.

   * - ``share_dhcp_address`` = ``False``

     - (Boolean) THIS VALUE SHOULD BE SET WHEN CREATING THE NETWORK.

       If True in multi_host mode, all compute hosts share the same dhcp address. The same IP address used for DHCP will be added on each nova-network node which is only visible to the VMs on the same host.

       The use of this configuration has been deprecated and may be removed in any release after Mitaka. It is recommended that instead of relying on this option, an explicit value should be passed to 'create_networks()' as a keyword argument with the name 'share_address'.

       - **Deprecated**

         No deprecation reason provided for this option.

   * - ``compute_driver`` = ``None``

     - (String) Defines which driver to use for controlling virtualization.

       Possible values:

       * ``libvirt.LibvirtDriver``

       * ``xenapi.XenAPIDriver``

       * ``fake.FakeDriver``

       * ``ironic.IronicDriver``

       * ``vmwareapi.VMwareVCDriver``

       * ``hyperv.HyperVDriver``

   * - ``timeout_nbd`` = ``10``

     - (Integer) Amount of time, in seconds, to wait for NBD device start up.

   * - ``logging_default_format_string`` = ``%(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [-] %(instance)s%(message)s``

     - (String) Format string to use for log messages when context is undefined.

   * - ``pybasedir`` = ``/usr/lib/python/site-packages/nova``

     - (String) The directory where the Nova python modules are installed.

       This directory is used to store template files for networking and remote console access. It is also the default path for other config options which need to persist Nova internal data. It is very unlikely that you need to change this option from its default value.

       Possible values:

       * The full path to a directory.

       Related options:

       * ``state_path``

   * - ``use_network_dns_servers`` = ``False``

     - (Boolean) When this option is set to True, the dns1 and dns2 servers for the network specified by the user on boot will be used for DNS, as well as any specified in the `dns_server` option.

       Related options:

        dns_server

   * - ``enabled_ssl_apis`` =

     - (List) List of APIs with enabled SSL.

       Nova provides SSL support for the API servers. enabled_ssl_apis option allows configuring the SSL support.

   * - ``log_date_format`` = ``%Y-%m-%d %H:%M:%S``

     - (String) Defines the format string for %%(asctime)s in log records. Default: %(default)s . This option is ignored if log_config_append is set.

   * - ``rate_limit_interval`` = ``0``

     - (Integer) Interval, number of seconds, of log rate limiting.

   * - ``rescue_timeout`` = ``0``

     - (Integer) Interval to wait before un-rescuing an instance stuck in RESCUE.

       Possible values:

       * 0: Disables the option (default)

       * Any positive integer in seconds: Enables the option.

   * - ``ovs_vsctl_timeout`` = ``120``

     - (Integer) This option represents the period of time, in seconds, that the ovs_vsctl calls will wait for a response from the database before timing out. A setting of 0 means that the utility should wait forever for a response.

       Possible values:

       * Any positive integer if a limited timeout is desired, or zero if the calls should wait forever for a response.

   * - ``max_concurrent_live_migrations`` = ``1``

     - (Integer) Maximum number of live migrations to run concurrently. This limit is enforced to avoid outbound live migrations overwhelming the host/network and causing failures. It is not recommended that you change this unless you are very sure that doing so is safe and stable in your environment.

       Possible values:

       * 0 : treated as unlimited.

       * Negative value defaults to 0.

       * Any positive integer representing maximum number of live migrations to run concurrently.

   * - ``use_syslog`` = ``False``

     - (Boolean) Use syslog for logging. Existing syslog format is DEPRECATED and will be changed later to honor RFC5424. This option is ignored if log_config_append is set.

   * - ``gateway_v6`` = ``None``

     - (String) This is the default IPv6 gateway. It is used only in the testing suite.

       Please note that this option is only used when using nova-network instead of Neutron in your deployment.

       Possible values:

        Any valid IP address.

       Related options:

        ``use_neutron``, ``gateway``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``osapi_compute_workers`` = ``None``

     - (Integer) Number of workers for OpenStack API service. The default will be the number of CPUs available.

       OpenStack API services can be configured to run as multi-process (workers). This overcomes the problem of reduction in throughput when API request concurrency increases. OpenStack API service will run in the specified number of processes.

       Possible Values:

       * Any positive integer

       * None (default value)

   * - ``max_concurrent_builds`` = ``10``

     - (Integer) Limits the maximum number of instance builds to run concurrently by nova-compute. Compute service can attempt to build an infinite number of instances, if asked to do so. This limit is enforced to avoid building unlimited instance concurrently on a compute node. This value can be set per compute node.

       Possible Values:

       * 0 : treated as unlimited.

       * Any positive integer representing maximum concurrent builds.

   * - ``tempdir`` = ``None``

     - (String) Explicitly specify the temporary working directory.

   * - ``monkey_patch`` = ``False``

     - (Boolean) Determine if monkey patching should be applied.

       Related options:

       * ``monkey_patch_modules``: This must have values set for this option to have any effect

   * - ``linuxnet_interface_driver`` = ``nova.network.linux_net.LinuxBridgeInterfaceDriver``

     - (String) This is the class used as the ethernet device driver for linuxnet bridge operations. The default value should be all you need for most cases, but if you wish to use a customized class, set this option to the full dot-separated import path for that class.

       Possible values:

        Any string representing a dot-separated class path that Nova can import.

   * - ``bindir`` = ``/usr/local/bin``

     - (String) The directory where the Nova binaries are installed.

       This option is only relevant if the networking capabilities from Nova are used (see services below). Nova's networking capabilities are targeted to be fully replaced by Neutron in the future. It is very unlikely that you need to change this option from its default value.

       Possible values:

       * The full path to a directory.

   * - ``default_flavor`` = ``m1.small``

     - (String) Default flavor to use for the EC2 API only. The Nova API does not support a default flavor.

       - **Deprecated**

         The EC2 API is deprecated.

   * - ``vcpu_pin_set`` = ``None``

     - (String) Defines which physical CPUs (pCPUs) can be used by instance virtual CPUs (vCPUs).

       Possible values:

       * A comma-separated list of physical CPU numbers that virtual CPUs can be allocated to by default. Each element should be either a single CPU number, a range of CPU numbers, or a caret followed by a CPU number to be excluded from a previous range. For example:

        vcpu_pin_set = "4-12,^8,15"

   * - ``cpu_allocation_ratio`` = ``0.0``

     - (Floating point) This option helps you specify virtual CPU to physical CPU allocation ratio.

       From Ocata (15.0.0) this is used to influence the hosts selected by the Placement API. Note that when Placement is used, the CoreFilter is redundant, because the Placement API will have already filtered out hosts that would have failed the CoreFilter.

       This configuration specifies ratio for CoreFilter which can be set per compute node. For AggregateCoreFilter, it will fall back to this configuration value if no per-aggregate setting is found.

       NOTE: This can be set per-compute, or if set to 0.0, the value set on the scheduler node(s) or compute node(s) will be used and defaulted to 16.0'.

       Possible values:

       * Any valid positive integer or float value

   * - ``instance_uuid_format`` = ``"[instance: %(uuid)s] "``

     - (String) The format for an instance UUID that is passed with the log message.

   * - ``db_driver`` = ``nova.db``

     - (String) The driver to use for database access

       - **Deprecated**

         No deprecation reason provided for this option.

   * - ``create_unique_mac_address_attempts`` = ``5``

     - (Integer) This option determines how many times nova-network will attempt to create a unique MAC address before giving up and raising a `VirtualInterfaceMacAddressException` error.

       Possible values:

        Any positive integer. The default is 5.

       Related options:

        ``use_neutron``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``scheduler_instance_sync_interval`` = ``120``

     - (Integer) Interval between sending the scheduler a list of current instance UUIDs to verify that its view of instances is in sync with nova.

       If the CONF option 'scheduler_tracks_instance_changes' is False, the sync calls will not be made. So, changing this option will have no effect.

       If the out of sync situations are not very common, this interval can be increased to lower the number of RPC messages being sent. Likewise, if sync issues turn out to be a problem, the interval can be lowered to check more frequently.

       Possible values:

       * 0: Will run at the default periodic interval.

       * Any value < 0: Disables the option.

       * Any positive integer in seconds.

       Related options:

       * This option has no impact if ``scheduler_tracks_instance_changes`` is set to False.

   * - ``iptables_top_regex`` =

     - (String) This expression, if defined, will select any matching iptables rules and place them at the top when applying metadata changes to the rules.

       Possible values:

       * Any string representing a valid regular expression, or an empty string

       Related options:

       * iptables_bottom_regex

   * - ``vlan_start`` = ``100``

     - (Integer) This is the VLAN number used for private networks. Note that the when creating the networks, if the specified number has already been assigned, nova-network will increment this number until it finds an available VLAN.

       Please note that this option is only used when using nova-network instead of Neutron in your deployment. It also will be ignored if the configuration option for `network_manager` is not set to the default of 'nova.network.manager.VlanManager'.

       Possible values:

        Any integer between 1 and 4094. Values outside of that range will raise a ValueError exception. Default = 100.

       Related options:

        ``network_manager``, ``use_neutron``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``osapi_compute_unique_server_name_scope`` =

     - (String) Sets the scope of the check for unique instance names.

       The default doesn't check for unique names. If a scope for the name check is set, a launch of a new instance or an update of an existing instance with a duplicate name will result in an ''InstanceExists'' error. The uniqueness is case-insensitive. Setting this option can increase the usability for end users as they don't have to distinguish among instances with the same name by their IDs.

       Possible values:

       * '': An empty value means that no uniqueness check is done and duplicate names are possible.

       * "project": The instance name check is done only for instances within the same project.

       * "global": The instance name check is done for all instances regardless of the project.

   * - ``ldap_dns_servers`` = ``['dns.example.org']``

     - (Multi-valued) DNS Servers for LDAP DNS driver

       Possible values:

       * A valid URL representing a DNS server

   * - ``log_config_append`` = ``None``

     - (String) The name of a logging configuration file. This file is appended to any existing logging configuration files. For details about logging configuration files, see the Python logging module documentation. Note that when logging configuration files are used then all logging configuration is set in the configuration file and other logging configuration options are ignored (for example, logging_context_format_string).

       - **Mutable**

         This option can be changed without restarting.

   * - ``internal_service_availability_zone`` = ``internal``

     - (String) This option specifies the name of the availability zone for the internal services. Services like nova-scheduler, nova-network, nova-conductor are internal services. These services will appear in their own internal availability_zone.

       Possible values:

       * Any string representing an availability zone name

       * 'internal' is the default value

   * - ``ipv6_backend`` = ``rfc2462``

     - (String) Abstracts out IPv6 address generation to pluggable backends.

       nova-network can be put into dual-stack mode, so that it uses both IPv4 and IPv6 addresses. In dual-stack mode, by default, instances acquire IPv6 global unicast addresses with the help of stateless address auto-configuration mechanism.

       Related options:

       * use_neutron: this option only works with nova-network.

       * use_ipv6: this option only works if ipv6 is enabled for nova-network.

   * - ``log_file`` = ``None``

     - (String) (Optional) Name of log file to send logging output to. If no default is set, logging will go to stderr as defined by use_stderr. This option is ignored if log_config_append is set.

   * - ``ldap_dns_soa_minimum`` = ``7200``

     - (Integer) Minimum interval (in seconds) for LDAP DNS driver Start of Authority

       It is Minimum time-to-live applies for all resource records in the zone file. This value is supplied to other servers how long they should keep the data in cache.

   * - ``network_driver`` = ``nova.network.linux_net``

     - (String) Driver to use for network creation.

       Network driver initializes (creates bridges and so on) only when the first VM lands on a host node. All network managers configure the network using network drivers. The driver is not tied to any particular network manager.

       The default Linux driver implements vlans, bridges, and iptables rules using linux utilities.

       Note that this option is only used when using nova-network instead of Neutron in your deployment.

       Related options:

       * use_neutron

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``sync_power_state_interval`` = ``600``

     - (Integer) Interval to sync power states between the database and the hypervisor.

       The interval that Nova checks the actual virtual machine power state and the power state that Nova has in its database. If a user powers down their VM, Nova updates the API to report the VM has been powered down. Should something turn on the VM unexpectedly, Nova will turn the VM back off to keep the system in the expected state.

       Possible values:

       * 0: Will run at the default periodic interval.

       * Any value < 0: Disables the option.

       * Any positive integer in seconds.

       Related options:

       * If ``handle_virt_lifecycle_events`` in workarounds_group is false and this option is negative, then instances that get out of sync between the hypervisor and the Nova database will have to be synchronized manually.

   * - ``default_availability_zone`` = ``nova``

     - (String) Default compute node availability_zone.

       This option determines the availability zone to be used when it is not specified in the VM creation request. If this option is not set, the default availability zone 'nova' is used.

       Possible values:

       * Any string representing an availability zone name

       * 'nova' is the default value

   * - ``logging_context_format_string`` = ``%(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user_identity)s] %(instance)s%(message)s``

     - (String) Format string to use for log messages with context.

   * - ``use_single_default_gateway`` = ``False``

     - (Boolean) When set to True, only the firt nic of a VM will get its default gateway from the DHCP server.

   * - ``cnt_vpn_clients`` = ``0``

     - (Integer) This option represents the number of IP addresses to reserve at the top of the address range for VPN clients. It also will be ignored if the configuration option for `network_manager` is not set to the default of 'nova.network.manager.VlanManager'.

       Possible values:

        Any integer, 0 or greater. The default is 0.

       Related options:

        ``use_neutron``, ``network_manager``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``multi_instance_display_name_template`` = ``%(name)s-%(count)d``

     - (String) When creating multiple instances with a single request using the os-multiple-create API extension, this template will be used to build the display name for each instance. The benefit is that the instances end up with different hostnames. Example display names when creating two VM's: name-1, name-2.

       Possible values:

       * Valid keys for the template are: name, uuid, count.

       - **Deprecated**

         This config changes API behaviour. All changes in API behaviour should be discoverable.

   * - ``ldap_dns_soa_refresh`` = ``1800``

     - (Integer) Refresh interval (in seconds) for LDAP DNS driver Start of Authority

       Time interval, a secondary/slave DNS server waits before requesting for primary DNS server's current SOA record. If the records are different, secondary DNS server will request a zone transfer from primary.

       NOTE: Lower values would cause more traffic.

   * - ``instance_build_timeout`` = ``0``

     - (Integer) Maximum time in seconds that an instance can take to build.

       If this timer expires, instance status will be changed to ERROR. Enabling this option will make sure an instance will not be stuck in BUILD state for a longer period.

       Possible values:

       * 0: Disables the option (default)

       * Any positive integer in seconds: Enables the option.

   * - ``network_topic`` = ``network``

     - (String) The topic network nodes listen on

       - **Deprecated**

         There is no need to let users choose the RPC topic for all services - there is little gain from this. Furthermore, it makes it really easy to break Nova by using this option.

   * - ``flat_network_bridge`` = ``None``

     - (String) This option determines the bridge used for simple network interfaces when no bridge is specified in the VM creation request.

       Please note that this option is only used when using nova-network instead of Neutron in your deployment.

       Possible values:

        Any string representing a valid network bridge, such as 'br100'

       Related options:

        ``use_neutron``

       - **Deprecated**

         nova-network is deprecated, as are any related configuration options.

   * - ``fatal_deprecations`` = ``False``

     - (Boolean) Enables or disables fatal status of deprecations.

   * - ``rpc_conn_pool_size`` = ``30``

     - (Integer) Size of RPC connection pool.

   * - ``conn_pool_min_size`` = ``2``

     - (Integer) The pool size limit for connections expiration policy

   * - ``conn_pool_ttl`` = ``1200``

     - (Integer) The time-to-live in sec of idle connections in the pool

   * - ``rpc_zmq_bind_address`` = ``*``

     - (String) ZeroMQ bind address. Should be a wildcard (*), an ethernet interface, or IP. The "host" option should point or resolve to this address.

   * - ``rpc_zmq_matchmaker`` = ``redis``

     - (String) MatchMaker driver.

   * - ``rpc_zmq_contexts`` = ``1``

     - (Integer) Number of ZeroMQ contexts, defaults to 1.

   * - ``rpc_zmq_topic_backlog`` = ``None``

     - (Integer) Maximum number of ingress messages to locally buffer per topic. Default is unlimited.

   * - ``rpc_zmq_ipc_dir`` = ``/var/run/openstack``

     - (String) Directory for holding IPC sockets.

   * - ``rpc_zmq_host`` = ``localhost``

     - (String) Name of this node. Must be a valid hostname, FQDN, or IP address. Must match "host" option, if running Nova.

   * - ``zmq_linger`` = ``-1``

     - (Integer) Number of seconds to wait before all pending messages will be sent after closing a socket. The default value of -1 specifies an infinite linger period. The value of 0 specifies no linger period. Pending messages shall be discarded immediately when the socket is closed. Positive values specify an upper bound for the linger period.

   * - ``rpc_poll_timeout`` = ``1``

     - (Integer) The default number of seconds that poll should wait. Poll raises timeout exception when timeout expired.

   * - ``zmq_target_expire`` = ``300``

     - (Integer) Expiration timeout in seconds of a name service record about existing target ( < 0 means no timeout).

   * - ``zmq_target_update`` = ``180``

     - (Integer) Update period in seconds of a name service record about existing target.

   * - ``use_pub_sub`` = ``False``

     - (Boolean) Use PUB/SUB pattern for fanout methods. PUB/SUB always uses proxy.

   * - ``use_router_proxy`` = ``False``

     - (Boolean) Use ROUTER remote proxy.

   * - ``use_dynamic_connections`` = ``False``

     - (Boolean) This option makes direct connections dynamic or static. It makes sense only with use_router_proxy=False which means to use direct connections for direct message types (ignored otherwise).

   * - ``zmq_failover_connections`` = ``2``

     - (Integer) How many additional connections to a host will be made for failover reasons. This option is actual only in dynamic connections mode.

   * - ``rpc_zmq_min_port`` = ``49153``

     - (Port number) Minimal port number for random ports range.

   * - ``rpc_zmq_max_port`` = ``65536``

     - (Integer) Maximal port number for random ports range.

   * - ``rpc_zmq_bind_port_retries`` = ``100``

     - (Integer) Number of retries to find free port number before fail with ZMQBindError.

   * - ``rpc_zmq_serialization`` = ``json``

     - (String) Default serialization mechanism for serializing/deserializing outgoing/incoming messages

   * - ``zmq_immediate`` = ``True``

     - (Boolean) This option configures round-robin mode in zmq socket. True means not keeping a queue when server side disconnects. False means to keep queue and messages even if server is disconnected, when the server appears we send all accumulated messages to it.

   * - ``zmq_tcp_keepalive`` = ``-1``

     - (Integer) Enable/disable TCP keepalive (KA) mechanism. The default value of -1 (or any other negative value) means to skip any overrides and leave it to OS default; 0 and 1 (or any other positive value) mean to disable and enable the option respectively.

   * - ``zmq_tcp_keepalive_idle`` = ``-1``

     - (Integer) The duration between two keepalive transmissions in idle condition. The unit is platform dependent, for example, seconds in Linux, milliseconds in Windows etc. The default value of -1 (or any other negative value and 0) means to skip any overrides and leave it to OS default.

   * - ``zmq_tcp_keepalive_cnt`` = ``-1``

     - (Integer) The number of retransmissions to be carried out before declaring that remote end is not available. The default value of -1 (or any other negative value and 0) means to skip any overrides and leave it to OS default.

   * - ``zmq_tcp_keepalive_intvl`` = ``-1``

     - (Integer) The duration between two successive keepalive retransmissions, if acknowledgement to the previous keepalive transmission is not received. The unit is platform dependent, for example, seconds in Linux, milliseconds in Windows etc. The default value of -1 (or any other negative value and 0) means to skip any overrides and leave it to OS default.

   * - ``rpc_thread_pool_size`` = ``100``

     - (Integer) Maximum number of (green) threads to work concurrently.

   * - ``rpc_message_ttl`` = ``300``

     - (Integer) Expiration timeout in seconds of a sent/received message after which it is not tracked anymore by a client/server.

   * - ``rpc_use_acks`` = ``False``

     - (Boolean) Wait for message acknowledgements from receivers. This mechanism works only via proxy without PUB/SUB.

   * - ``rpc_ack_timeout_base`` = ``15``

     - (Integer) Number of seconds to wait for an ack from a cast/call. After each retry attempt this timeout is multiplied by some specified multiplier.

   * - ``rpc_ack_timeout_multiplier`` = ``2``

     - (Integer) Number to multiply base ack timeout by after each retry attempt.

   * - ``rpc_retry_attempts`` = ``3``

     - (Integer) Default number of message sending attempts in case of any problems occurred: positive value N means at most N retries, 0 means no retries, None or -1 (or any other negative values) mean to retry forever. This option is used only if acknowledgments are enabled.

   * - ``subscribe_on`` =

     - (List) List of publisher hosts SubConsumer can subscribe on. This option has higher priority then the default publishers list taken from the matchmaker.

   * - ``executor_thread_pool_size`` = ``64``

     - (Integer) Size of executor thread pool.

   * - ``rpc_response_timeout`` = ``60``

     - (Integer) Seconds to wait for a response from a call.

   * - ``transport_url`` = ``None``

     - (String) A URL representing the messaging driver to use and its full configuration.

   * - ``rpc_backend`` = ``rabbit``

     - (String) The messaging driver to use, defaults to rabbit. Other drivers include amqp and zmq.

       - **Deprecated**

         Replaced by [DEFAULT]/transport_url

   * - ``control_exchange`` = ``openstack``

     - (String) The default exchange under which topics are scoped. May be overridden by an exchange name specified in the transport_url option.
