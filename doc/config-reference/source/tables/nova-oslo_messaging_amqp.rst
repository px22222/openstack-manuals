..
    Warning: Do not edit this file. It is automatically generated from the
    software project's code and your changes will be overwritten.

    The tool to generate this file lives in openstack-doc-tools repository.

    Please make any changes needed in the code, then run the
    autogenerate-config-doc tool from the openstack-doc-tools repository, or
    ask for help on the documentation mailing list, IRC channel or meeting.

.. _nova-oslo_messaging_amqp:

.. list-table:: Description of oslo_messaging_amqp configuration options
   :header-rows: 1
   :class: config-ref-table

   * - Configuration option = Default value
     - Description

   * - ``container_name`` = ``None``

     - (String) Name for the AMQP container. must be globally unique. Defaults to a generated UUID

   * - ``idle_timeout`` = ``0``

     - (Integer) Timeout for inactive connections (in seconds)

   * - ``trace`` = ``False``

     - (Boolean) Debug: dump AMQP frames to stdout

   * - ``ssl_ca_file`` =

     - (String) CA certificate PEM file used to verify the server's certificate

   * - ``ssl_cert_file`` =

     - (String) Self-identifying certificate PEM file for client authentication

   * - ``ssl_key_file`` =

     - (String) Private key PEM file used to sign ssl_cert_file certificate (optional)

   * - ``ssl_key_password`` = ``None``

     - (String) Password for decrypting ssl_key_file (if encrypted)

   * - ``allow_insecure_clients`` = ``False``

     - (Boolean) Accept clients using either SSL or plain TCP

       - **Deprecated**

         Not applicable - not a SSL server

   * - ``sasl_mechanisms`` =

     - (String) Space separated list of acceptable SASL mechanisms

   * - ``sasl_config_dir`` =

     - (String) Path to directory that contains the SASL configuration

   * - ``sasl_config_name`` =

     - (String) Name of configuration file (without .conf suffix)

   * - ``username`` =

     - (String) User name for message broker authentication

   * - ``password`` =

     - (String) Password for message broker authentication

   * - ``connection_retry_interval`` = ``1``

     - (Integer) Seconds to pause before attempting to re-connect.

   * - ``connection_retry_backoff`` = ``2``

     - (Integer) Increase the connection_retry_interval by this many seconds after each unsuccessful failover attempt.

   * - ``connection_retry_interval_max`` = ``30``

     - (Integer) Maximum limit for connection_retry_interval + connection_retry_backoff

   * - ``link_retry_delay`` = ``10``

     - (Integer) Time to pause between re-connecting an AMQP 1.0 link that failed due to a recoverable error.

   * - ``default_reply_retry`` = ``0``

     - (Integer) The maximum number of attempts to re-send a reply message which failed due to a recoverable error.

   * - ``default_reply_timeout`` = ``30``

     - (Integer) The deadline for an rpc reply message delivery.

   * - ``default_send_timeout`` = ``30``

     - (Integer) The deadline for an rpc cast or call message delivery. Only used when caller does not provide a timeout expiry.

   * - ``default_notify_timeout`` = ``30``

     - (Integer) The deadline for a sent notification message delivery. Only used when caller does not provide a timeout expiry.

   * - ``default_sender_link_timeout`` = ``600``

     - (Integer) The duration to schedule a purge of idle sender links. Detach link after expiry.

   * - ``addressing_mode`` = ``dynamic``

     - (String) Indicates the addressing mode used by the driver. Permitted values: 'legacy' - use legacy non-routable addressing 'routable' - use routable addresses 'dynamic' - use legacy addresses if the message bus does not support routing otherwise use routable addressing

   * - ``server_request_prefix`` = ``exclusive``

     - (String) address prefix used when sending to a specific server

   * - ``broadcast_prefix`` = ``broadcast``

     - (String) address prefix used when broadcasting to all servers

   * - ``group_request_prefix`` = ``unicast``

     - (String) address prefix when sending to any server in group

   * - ``rpc_address_prefix`` = ``openstack.org/om/rpc``

     - (String) Address prefix for all generated RPC addresses

   * - ``notify_address_prefix`` = ``openstack.org/om/notify``

     - (String) Address prefix for all generated Notification addresses

   * - ``multicast_address`` = ``multicast``

     - (String) Appended to the address prefix when sending a fanout message. Used by the message bus to identify fanout messages.

   * - ``unicast_address`` = ``unicast``

     - (String) Appended to the address prefix when sending to a particular RPC/Notification server. Used by the message bus to identify messages sent to a single destination.

   * - ``anycast_address`` = ``anycast``

     - (String) Appended to the address prefix when sending to a group of consumers. Used by the message bus to identify messages that should be delivered in a round-robin fashion across consumers.

   * - ``default_notification_exchange`` = ``None``

     - (String) Exchange name used in notification addresses. Exchange name resolution precedence: Target.exchange if set else default_notification_exchange if set else control_exchange if set else 'notify'

   * - ``default_rpc_exchange`` = ``None``

     - (String) Exchange name used in RPC addresses. Exchange name resolution precedence: Target.exchange if set else default_rpc_exchange if set else control_exchange if set else 'rpc'

   * - ``reply_link_credit`` = ``200``

     - (Integer) Window size for incoming RPC Reply messages.

   * - ``rpc_server_credit`` = ``100``

     - (Integer) Window size for incoming RPC Request messages

   * - ``notify_server_credit`` = ``100``

     - (Integer) Window size for incoming Notification messages

   * - ``pre_settled`` = ``['rpc-cast', 'rpc-reply']``

     - (Multi-valued) Send messages of this type pre-settled. Pre-settled messages will not receive acknowledgement from the peer. Note well: pre-settled messages may be silently discarded if the delivery fails. Permitted values: 'rpc-call' - send RPC Calls pre-settled 'rpc-reply'- send RPC Replies pre-settled 'rpc-cast' - Send RPC Casts pre-settled 'notify' - Send Notifications pre-settled
