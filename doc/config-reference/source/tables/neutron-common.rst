..
    Warning: Do not edit this file. It is automatically generated from the
    software project's code and your changes will be overwritten.

    The tool to generate this file lives in openstack-doc-tools repository.

    Please make any changes needed in the code, then run the
    autogenerate-config-doc tool from the openstack-doc-tools repository, or
    ask for help on the documentation mailing list, IRC channel or meeting.

.. _neutron-common:

.. list-table:: Description of common configuration options
   :header-rows: 1
   :class: config-ref-table

   * - Configuration option = Default value
     - Description
   * - **[DEFAULT]**
     -
   * - ``agent_down_time`` = ``75``
     - (Integer) Seconds to regard the agent is down; should be at least twice report_interval, to be sure the agent is down for good.
   * - ``allow_automatic_dhcp_failover`` = ``True``
     - (Boolean) Automatically remove networks from offline DHCP agents.
   * - ``allow_automatic_l3agent_failover`` = ``False``
     - (Boolean) Automatically reschedule routers from offline L3 agents to online L3 agents.
   * - ``api_workers`` = ``None``
     - (Integer) Number of separate API worker processes for service. If not specified, the default is equal to the number of CPUs available for best performance.
   * - ``auth_ca_cert`` = ``None``
     - (String) Certificate Authority public key (CA cert) file for ssl
   * - ``auth_strategy`` = ``keystone``
     - (String) The type of authentication to use
   * - ``base_mac`` = ``fa:16:3e:00:00:00``
     - (String) The base MAC address Neutron will use for VIFs. The first 3 octets will remain unchanged. If the 4th octet is not 00, it will also be used. The others will be randomly generated.
   * - ``bind_host`` = ``0.0.0.0``
     - (String) The host IP to bind to
   * - ``bind_port`` = ``9696``
     - (Port number) The port to bind to
   * - ``cache_url`` =
     - (String) DEPRECATED: URL to connect to the cache back end. This option is deprecated in the Newton release and will be removed. Please add a [cache] group for oslo.cache in your neutron.conf and add "enable" and "backend" options in this section.
   * - ``core_plugin`` = ``None``
     - (String) The core plugin Neutron will use
   * - ``default_availability_zones`` =
     - (List) Default value of availability zone hints. The availability zone aware schedulers use this when the resources availability_zone_hints is empty. Multiple availability zones can be specified by a comma separated string. This value can be empty. In this case, even if availability_zone_hints for a resource is empty, availability zone is considered for high availability while scheduling the resource.
   * - ``dhcp_agent_notification`` = ``True``
     - (Boolean) Allow sending resource operation notification to DHCP agent
   * - ``dhcp_agents_per_network`` = ``1``
     - (Integer) Number of DHCP agents scheduled to host a tenant network. If this number is greater than 1, the scheduler automatically assigns multiple DHCP agents for a given tenant network, providing high availability for DHCP service.
   * - ``dhcp_broadcast_reply`` = ``False``
     - (Boolean) Use broadcast in DHCP replies.
   * - ``dhcp_confs`` = ``$state_path/dhcp``
     - (String) Location to store DHCP server config files.
   * - ``dhcp_domain`` = ``openstacklocal``
     - (String) DEPRECATED: Domain to use for building the hostnames. This option is deprecated. It has been moved to neutron.conf as dns_domain. It will be removed in a future release.
   * - ``dhcp_lease_duration`` = ``86400``
     - (Integer) DHCP lease duration (in seconds). Use -1 to tell dnsmasq to use infinite lease times.
   * - ``dhcp_load_type`` = ``networks``
     - (String) Representing the resource type whose load is being reported by the agent. This can be "networks", "subnets" or "ports". When specified (Default is networks), the server will extract particular load sent as part of its agent configuration object from the agent report state, which is the number of resources being consumed, at every report_interval.dhcp_load_type can be used in combination with network_scheduler_driver = neutron.scheduler.dhcp_agent_scheduler.WeightScheduler When the network_scheduler_driver is WeightScheduler, dhcp_load_type can be configured to represent the choice for the resource being balanced. Example: dhcp_load_type=networks
   * - ``dns_domain`` = ``openstacklocal``
     - (String) Domain to use for building the hostnames
   * - ``enable_new_agents`` = ``True``
     - (Boolean) Agent starts with admin_state_up=False when enable_new_agents=False. In the case, user's resources will not be scheduled automatically to the agent until admin changes admin_state_up to True.
   * - ``enable_services_on_agents_with_admin_state_down`` = ``False``
     - (Boolean) Enable services on an agent with admin_state_up False. If this option is False, when admin_state_up of an agent is turned False, services on it will be disabled. Agents with admin_state_up False are not selected for automatic scheduling regardless of this option. But manual scheduling to such agents is available if this option is True.
   * - ``executor_thread_pool_size`` = ``64``
     - (Integer) Size of executor thread pool.
   * - ``external_dns_driver`` = ``None``
     - (String) Driver for external DNS integration.
   * - ``global_physnet_mtu`` = ``1500``
     - (Integer) MTU of the underlying physical network. Neutron uses this value to calculate MTU for all virtual network components. For flat and VLAN networks, neutron uses this value without modification. For overlay networks such as VXLAN, neutron automatically subtracts the overlay protocol overhead from this value. Defaults to 1500, the standard value for Ethernet.
   * - ``ip_lib_force_root`` = ``False``
     - (Boolean) Force ip_lib calls to use the root helper
   * - ``ipam_driver`` = ``internal``
     - (String) Neutron IPAM (IP address management) driver to use. By default, the reference implementation of the Neutron IPAM driver is used.
   * - ``mac_generation_retries`` = ``16``
     - (Integer) DEPRECATED: How many times Neutron will retry MAC generation. This option is now obsolete and so is deprecated to be removed in the Ocata release.
   * - ``max_allowed_address_pair`` = ``10``
     - (Integer) Maximum number of allowed address pairs
   * - ``max_dns_nameservers`` = ``5``
     - (Integer) Maximum number of DNS nameservers per subnet
   * - ``max_fixed_ips_per_port`` = ``5``
     - (Integer) DEPRECATED: Maximum number of fixed ips per port. This option is deprecated and will be removed in the Ocata release.
   * - ``max_rtr_adv_interval`` = ``100``
     - (Integer) MaxRtrAdvInterval setting for radvd.conf
   * - ``max_subnet_host_routes`` = ``20``
     - (Integer) Maximum number of host routes per subnet
   * - ``min_rtr_adv_interval`` = ``30``
     - (Integer) MinRtrAdvInterval setting for radvd.conf
   * - ``periodic_fuzzy_delay`` = ``5``
     - (Integer) Range of seconds to randomly delay when starting the periodic task scheduler to reduce stampeding. (Disable by setting to 0)
   * - ``periodic_interval`` = ``40``
     - (Integer) Seconds between running periodic tasks.
   * - ``report_interval`` = ``300``
     - (Integer) Interval between two metering reports
   * - ``state_path`` = ``/var/lib/neutron``
     - (String) Where to store Neutron state files. This directory must be writable by the agent.
   * - ``vlan_transparent`` = ``False``
     - (Boolean) If True, then allow plugins that support it to create VLAN transparent networks.
   * - ``web_framework`` = ``legacy``
     - (String) This will choose the web framework in which to run the Neutron API server. 'pecan' is a new experimental rewrite of the API server.
   * - **[AGENT]**
     -
   * - ``check_child_processes_action`` = ``respawn``
     - (String) Action to be executed when a child process dies
   * - ``check_child_processes_interval`` = ``60``
     - (Integer) Interval between checks of child process liveness (seconds), use 0 to disable
   * - ``debug_iptables_rules`` = ``False``
     - (Boolean) Duplicate every iptables difference calculation to ensure the format being generated matches the format of iptables-save. This option should not be turned on for production systems because it imposes a performance penalty.
   * - ``log_agent_heartbeats`` = ``False``
     - (Boolean) Log agent heartbeats
   * - ``polling_interval`` = ``2``
     - (Integer) The number of seconds the agent will wait between polling for local device changes.
   * - ``root_helper`` = ``sudo``
     - (String) Root helper application. Use 'sudo neutron-rootwrap /etc/neutron/rootwrap.conf' to use the real root filter facility. Change to 'sudo' to skip the filtering and just run the command directly.
   * - ``root_helper_daemon`` = ``None``
     - (String) Root helper daemon application to use when possible.
   * - **[profiler]**
     -
   * - ``connection_string`` = ``messaging://``
     - (String) Connection string for a notifier backend. Default value is messaging:// which sets the notifier to oslo_messaging.

       Examples of possible values:

       * messaging://: use oslo_messaging driver for sending notifications.
   * - ``enabled`` = ``False``
     - (Boolean) Enables the profiling for all services on this node. Default value is False (fully disable the profiling feature).

       Possible values:

       * True: Enables the feature

       * False: Disables the feature. The profiling cannot be started via this project operations. If the profiling is triggered by another project, this project part will be empty.
   * - ``hmac_keys`` = ``SECRET_KEY``
     - (String) Secret key(s) to use for encrypting context data for performance profiling. This string value should have the following format: <key1>[,<key2>,...<keyn>], where each key is some random string. A user who triggers the profiling via the REST API has to set one of these keys in the headers of the REST API call to include profiling results of this node for this particular project.

       Both "enabled" flag and "hmac_keys" config options should be set to enable profiling. Also, to generate correct profiling information across all services at least one key needs to be consistent between OpenStack projects. This ensures it can be used from client side to generate the trace, containing information from all possible resources.
   * - ``trace_sqlalchemy`` = ``False``
     - (Boolean) Enables SQL requests profiling in services. Default value is False (SQL requests won't be traced).

       Possible values:

       * True: Enables SQL requests profiling. Each SQL query will be part of the trace and can the be analyzed by how much time was spent for that.

       * False: Disables SQL requests profiling. The spent time is only shown on a higher level of operations. Single SQL queries cannot be analyzed this way.
   * - **[qos]**
     -
   * - ``notification_drivers`` = ``message_queue``
     - (List) Drivers list to use to send the update notification
   * - **[service_providers]**
     -
   * - ``service_provider`` = ``[]``
     - (Multi-valued) Defines providers for advanced services using the format: <service_type>:<name>:<driver>[:default]
