..
    Warning: Do not edit this file. It is automatically generated from the
    software project's code and your changes will be overwritten.

    The tool to generate this file lives in openstack-doc-tools repository.

    Please make any changes needed in the code, then run the
    autogenerate-config-doc tool from the openstack-doc-tools repository, or
    ask for help on the documentation mailing list, IRC channel or meeting.

.. _keystone-ldap:

.. list-table:: Description of LDAP configuration options
   :header-rows: 1
   :class: config-ref-table

   * - Configuration option = Default value
     - Description
   * - **[ldap]**
     -
   * - ``url`` = ``ldap://localhost``
     - (String) URL(s) for connecting to the LDAP server. Multiple LDAP URLs may be specified as a comma separated string. The first URL to successfully bind is used for the connection.
   * - ``user`` = ``None``
     - (String) The user name of the administrator bind DN to use when querying the LDAP server, if your LDAP server requires it.
   * - ``password`` = ``None``
     - (String) The password of the administrator bind DN to use when querying the LDAP server, if your LDAP server requires it.
   * - ``suffix`` = ``cn=example,cn=com``
     - (String) The default LDAP server suffix to use, if a DN is not defined via either `[ldap] user_tree_dn` or `[ldap] group_tree_dn`.
   * - ``query_scope`` = ``one``
     - (String) The search scope which defines how deep to search within the search base. A value of `one` (representing `oneLevel` or `singleLevel`) indicates a search of objects immediately below to the base object, but does not include the base object itself. A value of `sub` (representing `subtree` or `wholeSubtree`) indicates a search of both the base object itself and the entire subtree below it.
   * - ``page_size`` = ``0``
     - (Integer) Defines the maximum number of results per page that keystone should request from the LDAP server when listing objects. A value of zero (`0`) disables paging.
   * - ``alias_dereferencing`` = ``default``
     - (String) The LDAP dereferencing option to use for queries involving aliases. A value of `default` falls back to using default dereferencing behavior configured by your `ldap.conf`. A value of `never` prevents aliases from being dereferenced at all. A value of `searching` dereferences aliases only after name resolution. A value of `finding` dereferences aliases only during name resolution. A value of `always` dereferences aliases in all cases.
   * - ``debug_level`` = ``None``
     - (Integer) Sets the LDAP debugging level for LDAP calls. A value of 0 means that debugging is not enabled. This value is a bitmask, consult your LDAP documentation for possible values.
   * - ``chase_referrals`` = ``None``
     - (Boolean) Sets keystone's referral chasing behavior across directory partitions. If left unset, the system's default behavior will be used.
   * - ``user_tree_dn`` = ``None``
     - (String) The search base to use for users. Defaults to the `[ldap] suffix` value.
   * - ``user_filter`` = ``None``
     - (String) The LDAP search filter to use for users.
   * - ``user_objectclass`` = ``inetOrgPerson``
     - (String) The LDAP object class to use for users.
   * - ``user_id_attribute`` = ``cn``
     - (String) The LDAP attribute mapped to user IDs in keystone. This must NOT be a multivalued attribute. User IDs are expected to be globally unique across keystone domains and URL-safe.
   * - ``user_name_attribute`` = ``sn``
     - (String) The LDAP attribute mapped to user names in keystone. User names are expected to be unique only within a keystone domain and are not expected to be URL-safe.
   * - ``user_description_attribute`` = ``description``
     - (String) The LDAP attribute mapped to user descriptions in keystone.
   * - ``user_mail_attribute`` = ``mail``
     - (String) The LDAP attribute mapped to user emails in keystone.
   * - ``user_pass_attribute`` = ``userPassword``
     - (String) The LDAP attribute mapped to user passwords in keystone.
   * - ``user_enabled_attribute`` = ``enabled``
     - (String) The LDAP attribute mapped to the user enabled attribute in keystone. If setting this option to `userAccountControl`, then you may be interested in setting `[ldap] user_enabled_mask` and `[ldap] user_enabled_default` as well.
   * - ``user_enabled_invert`` = ``False``
     - (Boolean) Logically negate the boolean value of the enabled attribute obtained from the LDAP server. Some LDAP servers use a boolean lock attribute where "true" means an account is disabled. Setting `[ldap] user_enabled_invert = true` will allow these lock attributes to be used. This option will have no effect if either the `[ldap] user_enabled_mask` or `[ldap] user_enabled_emulation` options are in use.
   * - ``user_enabled_mask`` = ``0``
     - (Integer) Bitmask integer to select which bit indicates the enabled value if the LDAP server represents "enabled" as a bit on an integer rather than as a discrete boolean. A value of `0` indicates that the mask is not used. If this is not set to `0` the typical value is `2`. This is typically used when `[ldap] user_enabled_attribute = userAccountControl`. Setting this option causes keystone to ignore the value of `[ldap] user_enabled_invert`.
   * - ``user_enabled_default`` = ``True``
     - (String) The default value to enable users. This should match an appropriate integer value if the LDAP server uses non-boolean (bitmask) values to indicate if a user is enabled or disabled. If this is not set to `True`, then the typical value is `512`. This is typically used when `[ldap] user_enabled_attribute = userAccountControl`.
   * - ``user_attribute_ignore`` = ``default_project_id``
     - (List) List of user attributes to ignore on create and update, or whether a specific user attribute should be filtered for list or show user.
   * - ``user_default_project_id_attribute`` = ``None``
     - (String) The LDAP attribute mapped to a user's default_project_id in keystone. This is most commonly used when keystone has write access to LDAP.
   * - ``user_enabled_emulation`` = ``False``
     - (Boolean) If enabled, keystone uses an alternative method to determine if a user is enabled or not by checking if they are a member of the group defined by the `[ldap] user_enabled_emulation_dn` option. Enabling this option causes keystone to ignore the value of `[ldap] user_enabled_invert`.
   * - ``user_enabled_emulation_dn`` = ``None``
     - (String) DN of the group entry to hold enabled users when using enabled emulation. Setting this option has no effect unless `[ldap] user_enabled_emulation` is also enabled.
   * - ``user_enabled_emulation_use_group_config`` = ``False``
     - (Boolean) Use the `[ldap] group_member_attribute` and `[ldap] group_objectclass` settings to determine membership in the emulated enabled group. Enabling this option has no effect unless `[ldap] user_enabled_emulation` is also enabled.
   * - ``user_additional_attribute_mapping`` =
     - (List) A list of LDAP attribute to keystone user attribute pairs used for mapping additional attributes to users in keystone. The expected format is `<ldap_attr>:<user_attr>`, where `ldap_attr` is the attribute in the LDAP object and `user_attr` is the attribute which should appear in the identity API.
   * - ``group_tree_dn`` = ``None``
     - (String) The search base to use for groups. Defaults to the `[ldap] suffix` value.
   * - ``group_filter`` = ``None``
     - (String) The LDAP search filter to use for groups.
   * - ``group_objectclass`` = ``groupOfNames``
     - (String) The LDAP object class to use for groups. If setting this option to `posixGroup`, you may also be interested in enabling the `[ldap] group_members_are_ids` option.
   * - ``group_id_attribute`` = ``cn``
     - (String) The LDAP attribute mapped to group IDs in keystone. This must NOT be a multivalued attribute. Group IDs are expected to be globally unique across keystone domains and URL-safe.
   * - ``group_name_attribute`` = ``ou``
     - (String) The LDAP attribute mapped to group names in keystone. Group names are expected to be unique only within a keystone domain and are not expected to be URL-safe.
   * - ``group_member_attribute`` = ``member``
     - (String) The LDAP attribute used to indicate that a user is a member of the group.
   * - ``group_members_are_ids`` = ``False``
     - (Boolean) Enable this option if the members of the group object class are keystone user IDs rather than LDAP DNs. This is the case when using `posixGroup` as the group object class in Open Directory.
   * - ``group_desc_attribute`` = ``description``
     - (String) The LDAP attribute mapped to group descriptions in keystone.
   * - ``group_attribute_ignore`` =
     - (List) List of group attributes to ignore on create and update. or whether a specific group attribute should be filtered for list or show group.
   * - ``group_additional_attribute_mapping`` =
     - (List) A list of LDAP attribute to keystone group attribute pairs used for mapping additional attributes to groups in keystone. The expected format is `<ldap_attr>:<group_attr>`, where `ldap_attr` is the attribute in the LDAP object and `group_attr` is the attribute which should appear in the identity API.
   * - ``group_ad_nesting`` = ``False``
     - (Boolean) If enabled, group queries will use Active Directory specific filters for nested groups.
   * - ``tls_cacertfile`` = ``None``
     - (String) An absolute path to a CA certificate file to use when communicating with LDAP servers. This option will take precedence over `[ldap] tls_cacertdir`, so there is no reason to set both.
   * - ``tls_cacertdir`` = ``None``
     - (String) An absolute path to a CA certificate directory to use when communicating with LDAP servers. There is no reason to set this option if you've also set `[ldap] tls_cacertfile`.
   * - ``use_tls`` = ``False``
     - (Boolean) Enable TLS when communicating with LDAP servers. You should also set the `[ldap] tls_cacertfile` and `[ldap] tls_cacertdir` options when using this option. Do not set this option if you are using LDAP over SSL (LDAPS) instead of TLS.
   * - ``tls_req_cert`` = ``demand``
     - (String) Specifies which checks to perform against client certificates on incoming TLS sessions. If set to `demand`, then a certificate will always be requested and required from the LDAP server. If set to `allow`, then a certificate will always be requested but not required from the LDAP server. If set to `never`, then a certificate will never be requested.
   * - ``connection_timeout`` = ``-1``
     - (Integer) The connection timeout to use with the LDAP server. A value of `-1` means that connections will never timeout.
   * - ``use_pool`` = ``True``
     - (Boolean) Enable LDAP connection pooling for queries to the LDAP server. There is typically no reason to disable this.
   * - ``pool_size`` = ``10``
     - (Integer) The size of the LDAP connection pool. This option has no effect unless `[ldap] use_pool` is also enabled.
   * - ``pool_retry_max`` = ``3``
     - (Integer) The maximum number of times to attempt reconnecting to the LDAP server before aborting. A value of zero prevents retries. This option has no effect unless `[ldap] use_pool` is also enabled.
   * - ``pool_retry_delay`` = ``0.1``
     - (Floating point) The number of seconds to wait before attempting to reconnect to the LDAP server. This option has no effect unless `[ldap] use_pool` is also enabled.
   * - ``pool_connection_timeout`` = ``-1``
     - (Integer) The connection timeout to use when pooling LDAP connections. A value of `-1` means that connections will never timeout. This option has no effect unless `[ldap] use_pool` is also enabled.
   * - ``pool_connection_lifetime`` = ``600``
     - (Integer) The maximum connection lifetime to the LDAP server in seconds. When this lifetime is exceeded, the connection will be unbound and removed from the connection pool. This option has no effect unless `[ldap] use_pool` is also enabled.
   * - ``use_auth_pool`` = ``True``
     - (Boolean) Enable LDAP connection pooling for end user authentication. There is typically no reason to disable this.
   * - ``auth_pool_size`` = ``100``
     - (Integer) The size of the connection pool to use for end user authentication. This option has no effect unless `[ldap] use_auth_pool` is also enabled.
   * - ``auth_pool_connection_lifetime`` = ``60``
     - (Integer) The maximum end user authentication connection lifetime to the LDAP server in seconds. When this lifetime is exceeded, the connection will be unbound and removed from the connection pool. This option has no effect unless `[ldap] use_auth_pool` is also enabled.
