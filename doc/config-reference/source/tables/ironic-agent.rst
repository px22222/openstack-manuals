..
    Warning: Do not edit this file. It is automatically generated from the
    software project's code and your changes will be overwritten.

    The tool to generate this file lives in openstack-doc-tools repository.

    Please make any changes needed in the code, then run the
    autogenerate-config-doc tool from the openstack-doc-tools repository, or
    ask for help on the documentation mailing list, IRC channel or meeting.

.. _ironic-agent:

.. list-table:: Description of agent configuration options
   :header-rows: 1
   :class: config-ref-table

   * - Configuration option = Default value
     - Description
   * - **[agent]**
     -
   * - ``agent_api_version`` = ``v1``
     - (String) API version to use for communicating with the ramdisk agent.
   * - ``deploy_logs_collect`` = ``on_failure``
     - (String) Whether Ironic should collect the deployment logs on deployment failure (on_failure), always or never.
   * - ``deploy_logs_local_path`` = ``/var/log/ironic/deploy``
     - (String) The path to the directory where the logs should be stored, used when the deploy_logs_storage_backend is configured to "local".
   * - ``deploy_logs_storage_backend`` = ``local``
     - (String) The name of the storage backend where the logs will be stored.
   * - ``deploy_logs_swift_container`` = ``ironic_deploy_logs_container``
     - (String) The name of the Swift container to store the logs, used when the deploy_logs_storage_backend is configured to "swift".
   * - ``deploy_logs_swift_days_to_expire`` = ``30``
     - (Integer) Number of days before a log object is marked as expired in Swift. If None, the logs will be kept forever or until manually deleted. Used when the deploy_logs_storage_backend is configured to "swift".
   * - ``manage_agent_boot`` = ``True``
     - (Boolean) Whether Ironic will manage booting of the agent ramdisk. If set to False, you will need to configure your mechanism to allow booting the agent ramdisk.
   * - ``memory_consumed_by_agent`` = ``0``
     - (Integer) The memory size in MiB consumed by agent when it is booted on a bare metal node. This is used for checking if the image can be downloaded and deployed on the bare metal node after booting agent ramdisk. This may be set according to the memory consumed by the agent ramdisk image.
   * - ``post_deploy_get_power_state_retries`` = ``6``
     - (Integer) Number of times to retry getting power state to check if bare metal node has been powered off after a soft power off.
   * - ``post_deploy_get_power_state_retry_interval`` = ``5``
     - (Integer) Amount of time (in seconds) to wait between polling power state after trigger soft poweroff.
   * - ``stream_raw_images`` = ``True``
     - (Boolean) Whether the agent ramdisk should stream raw images directly onto the disk or not. By streaming raw images directly onto the disk the agent ramdisk will not spend time copying the image to a tmpfs partition (therefore consuming less memory) prior to writing it to the disk. Unless the disk where the image will be copied to is really slow, this option should be set to True. Defaults to True.
