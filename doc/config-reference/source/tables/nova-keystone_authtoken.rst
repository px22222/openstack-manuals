..
    Warning: Do not edit this file. It is automatically generated from the
    software project's code and your changes will be overwritten.

    The tool to generate this file lives in openstack-doc-tools repository.

    Please make any changes needed in the code, then run the
    autogenerate-config-doc tool from the openstack-doc-tools repository, or
    ask for help on the documentation mailing list, IRC channel or meeting.

.. _nova-keystone_authtoken:

.. list-table:: Description of keystone_authtoken configuration options
   :header-rows: 1
   :class: config-ref-table

   * - Configuration option = Default value
     - Description

   * - ``memcache_pool_socket_timeout`` = ``3``

     - (Integer) (Optional) Socket timeout in seconds for communicating with a memcached server.

   * - ``auth_type`` = ``None``

     - (Unknown) Authentication type to load

   * - ``cache`` = ``None``

     - (String) Request environment key where the Swift cache object is stored. When auth_token middleware is deployed with a Swift cache, use this option to have the middleware share a caching backend with swift. Otherwise, use the ``memcached_servers`` option instead.

   * - ``admin_token`` = ``None``

     - (String) This option is deprecated and may be removed in a future release. Single shared secret with the Keystone configuration used for bootstrapping a Keystone installation, or otherwise bypassing the normal authentication process. This option should not be used, use `admin_user` and `admin_password` instead.

   * - ``signing_dir`` = ``None``

     - (String) Directory used to cache files related to PKI tokens. This option has been deprecated in the Ocata release and will be removed in the P release.

       - **Deprecated**

         PKI token format is no longer supported.

   * - ``check_revocations_for_cached`` = ``False``

     - (Boolean) If true, the revocation list will be checked for cached tokens. This requires that PKI tokens are configured on the identity server.

       - **Deprecated**

         PKI token format is no longer supported.

   * - ``auth_port`` = ``35357``

     - (Integer) Port of the admin Identity API endpoint. Deprecated, use identity_uri.

   * - ``auth_protocol`` = ``https``

     - (String) Protocol of the admin Identity API endpoint. Deprecated, use identity_uri.

   * - ``auth_uri`` = ``None``

     - (String) Complete "public" Identity API endpoint. This endpoint should not be an "admin" endpoint, as it should be accessible by all end users. Unauthenticated clients are redirected to this endpoint to authenticate. Although this endpoint should ideally be unversioned, client support in the wild varies. If you're using a versioned v2 endpoint here, then this should *not* be the same endpoint the service user utilizes for validating tokens, because normal end users may not be able to reach that endpoint.

   * - ``auth_version`` = ``None``

     - (String) API version of the admin Identity API endpoint.

   * - ``include_service_catalog`` = ``True``

     - (Boolean) (Optional) Indicate whether to set the X-Service-Catalog header. If False, middleware will not ask for service catalog on token validation and will not set the X-Service-Catalog header.

   * - ``memcached_servers`` = ``None``

     - (List) Optionally specify a list of memcached server(s) to use for caching. If left undefined, tokens will instead be cached in-process.

   * - ``cafile`` = ``None``

     - (String) A PEM encoded Certificate Authority to use when verifying HTTPs connections. Defaults to system CAs.

   * - ``hash_algorithms`` = ``md5``

     - (List) Hash algorithms to use for hashing PKI tokens. This may be a single algorithm or multiple. The algorithms are those supported by Python standard hashlib.new(). The hashes will be tried in the order given, so put the preferred one first for performance. The result of the first hash will be stored in the cache. This will typically be set to multiple values only while migrating from a less secure algorithm to a more secure one. Once all the old tokens are expired this option should be set to a single value for better performance.

       - **Deprecated**

         PKI token format is no longer supported.

   * - ``certfile`` = ``None``

     - (String) Required if identity server requires client certificate

   * - ``memcache_pool_dead_retry`` = ``300``

     - (Integer) (Optional) Number of seconds memcached server is considered dead before it is tried again.

   * - ``admin_tenant_name`` = ``admin``

     - (String) Service tenant name.

   * - ``token_cache_time`` = ``300``

     - (Integer) In order to prevent excessive effort spent validating tokens, the middleware caches previously-seen tokens for a configurable duration (in seconds). Set to -1 to disable caching completely.

   * - ``memcache_pool_conn_get_timeout`` = ``10``

     - (Integer) (Optional) Number of seconds that an operation will wait to get a memcached client connection from the pool.

   * - ``admin_password`` = ``None``

     - (String) Service user password.

   * - ``http_request_max_retries`` = ``3``

     - (Integer) How many times are we trying to reconnect when communicating with Identity API Server.

   * - ``service_token_roles`` = ``service``

     - (List) A choice of roles that must be present in a service token. Service tokens are allowed to request that an expired token can be used and so this check should tightly control that only actual services should be sending this token. Roles here are applied as an ANY check so any role in this list must be present. For backwards compatibility reasons this currently only affects the allow_expired check.

   * - ``memcache_secret_key`` = ``None``

     - (String) (Optional, mandatory if memcache_security_strategy is defined) This string is used for key derivation.

   * - ``admin_user`` = ``None``

     - (String) Service username.

   * - ``region_name`` = ``None``

     - (String) The region in which the identity server can be found.

   * - ``auth_admin_prefix`` =

     - (String) Prefix to prepend at the beginning of the path. Deprecated, use identity_uri.

   * - ``insecure`` = ``False``

     - (Boolean) Verify HTTPS connections.

   * - ``service_token_roles_required`` = ``False``

     - (Boolean) For backwards compatibility reasons we must let valid service tokens pass that don't pass the service_token_roles check as valid. Setting this true will become the default in a future release and should be enabled if possible.

   * - ``delay_auth_decision`` = ``False``

     - (Boolean) Do not handle authorization requests within the middleware, but delegate the authorization decision to downstream WSGI components.

   * - ``auth_host`` = ``127.0.0.1``

     - (String) Host providing the admin Identity API endpoint. Deprecated, use identity_uri.

   * - ``memcache_use_advanced_pool`` = ``False``

     - (Boolean) (Optional) Use the advanced (eventlet safe) memcached client pool. The advanced pool will only work under python 2.x.

   * - ``identity_uri`` = ``None``

     - (String) Complete admin Identity API endpoint. This should specify the unversioned root endpoint e.g. https://localhost:35357/

   * - ``revocation_cache_time`` = ``10``

     - (Integer) Determines the frequency at which the list of revoked tokens is retrieved from the Identity service (in seconds). A high number of revocation events combined with a low cache duration may significantly reduce performance. Only valid for PKI tokens. This option has been deprecated in the Ocata release and will be removed in the P release.

       - **Deprecated**

         PKI token format is no longer supported.

   * - ``memcache_pool_maxsize`` = ``10``

     - (Integer) (Optional) Maximum total number of open connections to every memcached server.

   * - ``auth_section`` = ``None``

     - (Unknown) Config Section from which to load plugin specific options

   * - ``enforce_token_bind`` = ``permissive``

     - (String) Used to control the use and type of token binding. Can be set to: "disabled" to not check token binding. "permissive" (default) to validate binding information if the bind type is of a form known to the server and ignore it if not. "strict" like "permissive" but if the bind type is unknown the token will be rejected. "required" any form of token binding is needed to be allowed. Finally the name of a binding method that must be present in tokens.

   * - ``memcache_security_strategy`` = ``None``

     - (String) (Optional) If defined, indicate whether token data should be authenticated or authenticated and encrypted. If MAC, token data is authenticated (with HMAC) in the cache. If ENCRYPT, token data is encrypted and authenticated in the cache. If the value is not one of these options or empty, auth_token will raise an exception on initialization.

   * - ``memcache_pool_unused_timeout`` = ``60``

     - (Integer) (Optional) Number of seconds a connection to memcached is held unused in the pool before it is closed.

   * - ``http_connect_timeout`` = ``None``

     - (Integer) Request timeout value for communicating with Identity API server.

   * - ``keyfile`` = ``None``

     - (String) Required if identity server requires client certificate
